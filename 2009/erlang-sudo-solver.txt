pubdate: 2009-11-17T01:42:40Z
title: Erlang sudo solver
author: Miklos
tags: en, hacking
<<<
++++
First, sorry I'm not yet publishing any code. It's about there is a race at the uni where the fastest implementation wins, so I don't want to share anything before that ends. It'll end in a month, actually. ;)

Other than that, it's a generic sudoku solver, it can solve NxN sodukus, not only 9x9 and it handles extra rules. A detailed description is <a href="http://dp.iit.bme.hu/dp09a/dp09a-nhf.html">here</a> (<a href="http://translate.google.com/translate?u=http%3A%2F%2Fdp.iit.bme.hu%2Fdp09a%2Fdp09a-nhf.html&amp;sl=hu&amp;tl=en">gt</a>).

But of course the purpose of this post is to bookmark a few useful page I found while working on my implementation:

<ul>
  <li><a href="http://en.wikipedia.org/wiki/Backtracking#Pseudocode">Backtracking pseudocode</a></li>
  <li><a href="http://en.wikipedia.org/wiki/Algorithmics_of_sudoku#Solving_sudokus_by_backtracking">Solving sudokus by backtracking</a></li>
  <li><a href="http://www3.erlang.org/documentation/doc-5.5.5/lib/tools-2.5.5/doc/html/fprof.html">Erlang fprof module documentation</a></li>
</ul>

The important part of the later links is three lines:

<pre>1> fprof:apply(foo, create_file_slow, [junk, 1024]).
2> fprof:profile().
3> fprof:analyse().</pre>

That makes profiling Erlang programs really easy, once you get used to the output, which is a bit weird for the first time. :)
++++
