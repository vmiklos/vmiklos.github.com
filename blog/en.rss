<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>What is Miklos hacking - Tags: en</title>
        <description></description>
        <link>http://vmiklos.hu/blog/</link>
        <item>
            <title>The yellow border around the pig</title>
            <description>&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh3.googleusercontent.com/-IhaYMXbDVyo/VEufBghNiHI/AAAAAAAAE4g/8n2DuQ_Edeo/s0/"&gt;
&lt;img src="https://lh3.googleusercontent.com/-IhaYMXbDVyo/VEufBghNiHI/AAAAAAAAE4g/8n2DuQ_Edeo/s400/" alt="https://lh3.googleusercontent.com/-IhaYMXbDVyo/VEufBghNiHI/AAAAAAAAE4g/8n2DuQ_Edeo/s400/" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;It turns out LibreOffice&amp;#8217;s RTF and DOCX import filter ignored borders around Writer
pictures. Given that this
&lt;a href="https://bugs.freedesktop.org/show_bug.cgi?id=85179"&gt;worked&lt;/a&gt; in the RTF case in
the past, it&amp;#8217;s a bit amusing that now the very same commit implements a new
feature for the DOCX case and at the same time fixes a regression in the RTF
filter. Code sharing FTW! :-)&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/yellow-pig.html</link>
            <pubDate>Sat, 25 Oct 2014 15:10:38 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/yellow-pig.html</guid>
        </item>
        <item>
            <title>UPC vs port forwarding</title>
            <description>&lt;div class="paragraph"&gt;&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/UPC_Broadband"&gt;UPC&lt;/a&gt; traditionally had a setup
consisting of a cable modem providing internet access to a single computer,
and then it was up to the users if they use that access to really connect to a
computer or to a router, providing wireless access and so on.  It seems, these
days they are more after actually &lt;em&gt;encouraging&lt;/em&gt; people to use their
subscription on multiple devices&amp;#8201;&amp;#8212;&amp;#8201;possibly that way it&amp;#8217;s easier to sell
larger packages (like 60 MBit/s download rate instead of 30 MBit/s, etc).  One
fallout from this move is that they started to replace modems with a
combination of modems and routers, in this case this is an
&lt;a href="http://www.ubeeinteractive.com/products/cable/evw3226"&gt;Ubee EVW3226&lt;/a&gt;, with the
brand removed. I wanted to try out if this new device could replace my
previous router or not&amp;#8201;&amp;#8212;&amp;#8201;so far it seems to be good enough, though there was
one pitfall, hence this post.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;It&amp;#8217;s possible to define a range of IP addresses to be used for DHCP purposes,
though you can&amp;#8217;t serve fixed IP addresses based on the MAC address of the
clients. Given that my home network isn&amp;#8217;t that large, I can tolerate that: as
long as there is a range that can be safely used for fixed addresses, I can
configure that manually.  It&amp;#8217;s also possible to do port forwarding, e.g.
redirecting the incoming ssh traffic to a given address&amp;#8201;&amp;#8212;&amp;#8201;except you can&amp;#8217;t do
both at the same time: you can&amp;#8217;t redirect traffic to an address that&amp;#8217;s not
known (served via DHCP) to the router. Which is a shame, the #1 use case for
port forwarding is to redirect traffic to a home-server that will then also
have a fixed IP internally&amp;#8230;&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;So here is a hack that allowed me to still do this: set the start of the range
of the DHCP served IP&amp;#8217;s exactly to the address of the (to be used in future
as) fixed address, e.g. 192.168.0.5. Connect with one client, so that the
address will be &lt;em&gt;known&lt;/em&gt; to the router. Then add the port-forwarding rule,
finally set the DHCP range back to its original value (in my case I use
192.168.0.1..99 for fixed addresses and 100+ for dynamic purposes). It&amp;#8217;s a
stupid trick, but it works&amp;#8230; ;-)&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/upc-port-forward.html</link>
            <pubDate>Sat, 20 Sep 2014 20:56:33 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/upc-port-forward.html</guid>
        </item>
        <item>
            <title>LibreOffice Conference 2014, Bern</title>
            <description>&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://picasaweb.google.com/104737754628780823336/20140907_Bern#6056624255300189730"&gt;
&lt;img src="https://lh3.googleusercontent.com/-JCMeo2opMG4/VA1zq7suviI/AAAAAAAACo8/HXP5IrRC1pw/s400/" alt="https://lh3.googleusercontent.com/-JCMeo2opMG4/VA1zq7suviI/AAAAAAAACo8/HXP5IrRC1pw/s400/" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;This year&amp;#8217;s LibreOffice conference was held in Bern, Switzerland. Links to my slides:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="https://speakerdeck.com/vmiklos/inconsistencies-fixed-in-writer"&gt;Inconsistencies Fixed in Writer&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="https://speakerdeck.com/vmiklos/proudly-breaking-your-toolchain"&gt;Proudly breaking your toolchain&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;During the sessions I also had some time to hack on the followings:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
RTF export: added support for custom wrap polygon of Writer pictures
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
fixed &lt;a href="https://bugs.freedesktop.org/show_bug.cgi?id=82067"&gt;fdo#82067&lt;/a&gt;
  FILEOPEN: RTF images not in correct position
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
fixed &lt;a href="https://bugs.freedesktop.org/show_bug.cgi?id=82078"&gt;fdo#82078&lt;/a&gt;
  FILEOPEN: RTF bold text spilling over to non-bold text
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
fixed &lt;a href="http://bugzilla.abisource.com/show_bug.cgi?id=10039"&gt;abi#10039&lt;/a&gt; crasher
  on RTF export of page-anchored pictures
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Regarding the number of attendees, draw your own conclusions from the
&lt;a href="https://www.dropbox.com/sc/45n18v60ckztv63/AABg9ka54ueqFCGft1V54eTYa"&gt;group
picture&lt;/a&gt;&amp;#8201;&amp;#8212;&amp;#8201;probably around 300 attendees, counting all days.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Thanks for the organizers for this beautiful event&amp;#8201;&amp;#8212;&amp;#8201;and also the sponsors!
:-)&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;My pictures are available
&lt;a href="https://picasaweb.google.com/104737754628780823336/20140907_Bern"&gt;here&lt;/a&gt; (and I
also made a &lt;a href="http://vmiklos.hu/panoramas/bern.html"&gt;panorama&lt;/a&gt;).&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/locon2014-bern.html</link>
            <pubDate>Mon, 08 Sep 2014 12:11:05 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/locon2014-bern.html</guid>
        </item>
        <item>
            <title>Cleanup of ooxmltok in LibreOffice</title>
            <description>&lt;div style="text-align: center; font-size: 0.6em;"&gt;
&lt;img src="https://lh4.googleusercontent.com/-GipHI6c2dSM/U_8TTB9IzUI/AAAAAAAAExA/LVMQpNezkus/s400/"/&gt;
&lt;p&gt;(via &lt;a href="https://www.flickr.com/photos/aigle_dore/7356881428/"&gt;aigle_dore&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;In June, we
&lt;a href="http://article.gmane.org/gmane.comp.documentfoundation.libreoffice.qa/7272"&gt;decided&lt;/a&gt;
to get rid of XSLT usage in writerfilter, the module responsible for RTF and
DOCX import in LibreOffice. As usual with cleaning up mess, this took time
(about two months), but I&amp;#8217;m now happy to say that I&amp;#8217;m mostly done with this.
:-)&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;See &lt;a href="http://vmiklos.hu/blog/doctok.html"&gt;the doctok blog post&lt;/a&gt; for some
background, the topic here was to clean up the OOXML tokenizer, that is that
building block that turns a zipped XML document into a token stream.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The following problems are now solved:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Part of the module was generated code, the generator was implemented mostly
  in XSLT, but some bits were written in Perl and sed. About 4200 lines of
  XSLT code is now rewritten in Python, in about 1300 lines.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Given that we have much more developers who speak Python, compared to XSLT,
  nontrivial changes are now much easier in the generator: Jan Holesovsky
  &lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=c74de6c2e29a16fb4a458816cd17fa678edd16e7"&gt;cleaned
  up&lt;/a&gt; &lt;code&gt;boost::unordered_map&lt;/code&gt; usage at places where we depended on the order of
  elements. (Yes, you read it correctly, that was the situation up till now!)
  This also helps reducing the size of the resulting writerfilter shared library.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The input of the code generator was the large &lt;code&gt;model.xml&lt;/code&gt; file, and
  generator scripts only extracted interesting information from it, so if you
  mistyped something, you got no error messages, just silent failures. I&amp;#8217;ve
  removed quite some XML elements and attributes from it which were parsed by
  none of the generator scripts and written a
  &lt;a href="http://opengrok.libreoffice.org/xref/core/writerfilter/documentation/ooxml/model.rng"&gt;relax-ng
  schema&lt;/a&gt; for the remaining markup. Validating against this schema is part of
  the default build, so no more typos without a build failure. ;-)
  (The schema also contains quite some documentation, finally.)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A gperf hash of all possible OOXML elements / attribute names were
  duplicated in writerfilter, even if that information was already available
  from the oox module. This is now fixed, reducing the size of the shared
  library even further.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Also, both oox and writerfilter had a list of namespace URL&amp;#8217;s, mapping them
  to an integer enumeration, and when the two lists didn&amp;#8217;t match, Bad Things
  happened (read: usually resulted in a crash.) This is the past, I&amp;#8217;ve
  refactored writerfilter to use the same namespace alias names as oox, and this
  allowed to get rid of the writerfilter copy of the namespace alias list. So in
  the future, if new namespaces have to added, only oox has to be extended.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Oh and the bonus feature: I&amp;#8217;ve implemented a script called
&lt;a href="http://opengrok.libreoffice.org/xref/core/writerfilter/qa/ooxml/watch-generated-code.sh"&gt;watch-generated-code.sh&lt;/a&gt;,
which can record a good state of the generated code, and then compare later
generated results against that, so that refactoring of the generator can now be
performed in a safe way: you can change the generator in any way to make it
better, and still avoid accidental output changes. :-) This is particularly
useful, as it only diffs the end result of the whole generation process (cxx
and hxx files), not temporarily files, which are OK to change, as long as the
end result is the same.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;As a conclusion, here are sizes of a stripped dbgutil version of the
writerfilter shared library, from the libreoffice-4-3-branch-point and today&amp;#8217;s
master:&lt;/p&gt;&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;&lt;code&gt;$ git checkout oldest
HEAD is now at b3130c8... 2014-05-21
vmiklos@o9010:~/git/libreoffice/daily$ ls -lh opt/program/libwriterfilterlo.so
-rwxr-xr-x 1 vmiklos users 8,3M aug   28 14:00 opt/program/libwriterfilterlo.so
$ git checkout master
Switched to branch 'master'
vmiklos@o9010:~/git/libreoffice/daily$ ls -lh opt/program/libwriterfilterlo.so
-rwxr-xr-x 1 vmiklos users 6,1M aug   28 14:01 opt/program/libwriterfilterlo.so&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Again, the 8,3MB &amp;#8594; 6,1MB size reduction is mostly thanks to Kendy&amp;#8217;s map cleanups + the
duplicated gperf hash going away. :-)&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/ooxmltok.html</link>
            <pubDate>Thu, 28 Aug 2014 14:04:36 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/ooxmltok.html</guid>
        </item>
        <item>
            <title>So many bugs</title>
            <description>&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="https://lh6.googleusercontent.com/-cHxbUbiEMWM/U-izNauMEBI/AAAAAAAAEtI/mQUvxyaPABA/s0/"&gt;
&lt;img src="https://lh6.googleusercontent.com/-cHxbUbiEMWM/U-izNauMEBI/AAAAAAAAEtI/mQUvxyaPABA/s400/" alt="https://lh6.googleusercontent.com/-cHxbUbiEMWM/U-izNauMEBI/AAAAAAAAEtI/mQUvxyaPABA/s400/" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="https://lh4.googleusercontent.com/-kzGk3zwiI4o/U-izLdW6PfI/AAAAAAAAEtA/H7ENAJipMNc/s0/"&gt;
&lt;img src="https://lh4.googleusercontent.com/-kzGk3zwiI4o/U-izLdW6PfI/AAAAAAAAEtA/H7ENAJipMNc/s400/" alt="https://lh4.googleusercontent.com/-kzGk3zwiI4o/U-izLdW6PfI/AAAAAAAAEtA/H7ENAJipMNc/s400/" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;From time to time developers feel that they have little time, but they would
want to take care of many bugs. Last week I was frustrated enough to actually
design a T-shirt for just that. ;-)&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Above is how it looks like. In case you don&amp;#8217;t get the joke, see
&lt;a href="http://nabble.documentfoundation.org/Building-LibreOffice-from-an-IDE-td4083960.html"&gt;here&lt;/a&gt;
for a hint. Oh, and if you would like to build your own binary&amp;#8230; err T-shirt,
you can do it:
&lt;a href="http://people.freedesktop.org/~vmiklos/2014/bugs-tshirt.odg"&gt;here&lt;/a&gt; is the ODG
file that can serve as a source. Happy bugfixing! :-)&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/so-many-bugs.html</link>
            <pubDate>Mon, 11 Aug 2014 18:04:13 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/so-many-bugs.html</guid>
        </item>
        <item>
            <title>TextBox: complex LibreOffice Writer content inside shapes</title>
            <description>&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh6.googleusercontent.com/-Aq8Uxzw0bys/U8ZXkDbzhfI/AAAAAAAAEiQ/2pvZlSkHTsc/s0/"&gt;
&lt;img src="https://lh6.googleusercontent.com/-Aq8Uxzw0bys/U8ZXkDbzhfI/AAAAAAAAEiQ/2pvZlSkHTsc/s400/" alt="https://lh6.googleusercontent.com/-Aq8Uxzw0bys/U8ZXkDbzhfI/AAAAAAAAEiQ/2pvZlSkHTsc/s400/" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;TL;DR: see above&amp;#8201;&amp;#8212;&amp;#8201;it&amp;#8217;s now possible to have complex Writer content (charts,
tracked changes, tables, fields, etc.) inside drawinglayer shapes, yay! :-)&lt;/p&gt;&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_the_problem"&gt;The problem&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Writer in LibreOffice 4.3 can have two kind of shapes: drawinglayer ones or
Writer TextFrames. (Let&amp;#8217;s ignore OLE objects and Writer pictures for now.)
Drawinglayer shapes can be triangles (non-rectangular), rectangles can have
rounded corners and so on, but shape text is handled by editeng&amp;#8201;&amp;#8212;&amp;#8201;the same
engine that is used for Impress shapes or Calc cells. OTOH a Writer TextFrame
can contain anything that is supported by Writer (Writer fields, styles,
tables, etc.), but its drawing capabilities are quite limited: no triangle,
rounded corners, etc. Together with &lt;a href="http://www.cloudon.com/"&gt;CloudOn&lt;/a&gt;, we
thought the best would be to be able to have both, and started to use the
"shape with TextBox" term for this feature.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;A user can already sort of to do this by creating a drawinglayer shape, then a
Writer TextFrame, and by setting the properties of the Writer TextFrame
(position, size, etc) to appear as if the TextFrame would be the shape text of
the drawinglayer shape.  The idea is to tie these two objects together, so the
(UI and API) user sees them as a single object.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_results"&gt;Results&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I&amp;#8217;m providing here a few screenshots. Above, you can see &lt;a href="http://cgit.freedesktop.org/libreoffice/core/tree/sw/qa/extras/odfexport/data/textbox-rounded-corners.odt"&gt;an ODF document&lt;/a&gt;
having a rectangle with rounded corners, still containing a table.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Given that OOXML has this feature since its birth, I&amp;#8217;m also showing &lt;a href="http://people.freedesktop.org/~vmiklos/2014/textbox/"&gt;a few DOCX
documents&lt;/a&gt;, which are now handled far better:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
chart inside a left arrow callout:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh4.googleusercontent.com/-s5ABCN9pchc/U8ZXfLV5eKI/AAAAAAAAEh4/uxpwBVIcJRU/s0/"&gt;
&lt;img src="https://lh4.googleusercontent.com/-s5ABCN9pchc/U8ZXfLV5eKI/AAAAAAAAEh4/uxpwBVIcJRU/s400/" alt="https://lh4.googleusercontent.com/-s5ABCN9pchc/U8ZXfLV5eKI/AAAAAAAAEh4/uxpwBVIcJRU/s400/" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
tracked changes inside a cloud callout:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh6.googleusercontent.com/-AzHF9r3PMgY/U8ZXhbZuXOI/AAAAAAAAEiA/58FsbrkumcM/s0/"&gt;
&lt;img src="https://lh6.googleusercontent.com/-AzHF9r3PMgY/U8ZXhbZuXOI/AAAAAAAAEiA/58FsbrkumcM/s400/" alt="https://lh6.googleusercontent.com/-AzHF9r3PMgY/U8ZXhbZuXOI/AAAAAAAAEiA/58FsbrkumcM/s400/" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
SmartArt inside a snip diagonal corner rectangle:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh3.googleusercontent.com/-_1-RYPfLX2w/U8ZXi6XNEhI/AAAAAAAAEiI/irEHHeoxRXU/s0/"&gt;
&lt;img src="https://lh3.googleusercontent.com/-_1-RYPfLX2w/U8ZXi6XNEhI/AAAAAAAAEiI/irEHHeoxRXU/s400/" alt="https://lh3.googleusercontent.com/-_1-RYPfLX2w/U8ZXi6XNEhI/AAAAAAAAEiI/irEHHeoxRXU/s400/" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Table of Contents inside a pentagon:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh3.googleusercontent.com/-aBD1Rbv4-DU/U8ZXlV2vxSI/AAAAAAAAEiY/atjjnYGDQyw/s0/"&gt;
&lt;img src="https://lh3.googleusercontent.com/-aBD1Rbv4-DU/U8ZXlV2vxSI/AAAAAAAAEiY/atjjnYGDQyw/s400/" alt="https://lh3.googleusercontent.com/-aBD1Rbv4-DU/U8ZXlV2vxSI/AAAAAAAAEiY/atjjnYGDQyw/s400/" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_details"&gt;Details&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;What follows is something you can probably skip if you&amp;#8217;re a user&amp;#8201;&amp;#8212;&amp;#8201;however if
you&amp;#8217;re a developer and you want to understand how the above is implemented,
then read on. ;-)&lt;/p&gt;&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="_situation_in_4_3"&gt;Situation in 4.3&lt;/h3&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;From the drawinglayer point of view: &lt;code&gt;SwDoc&lt;/code&gt; contains an &lt;code&gt;SdrModel&lt;/code&gt;
(&lt;code&gt;SwDoc::GetOrCreateDrawModel()&lt;/code&gt;), which contains a single &lt;code&gt;SdrPage&lt;/code&gt;
(&lt;code&gt;SdrModel::GetPage()&lt;/code&gt;)&amp;#8201;&amp;#8212;&amp;#8201;Draw/Impress contain multiple sdr pages. The
&lt;code&gt;SdrPage&lt;/code&gt; contains the shapes: e.g. a triangle is an &lt;code&gt;SdrObjCustomShape&lt;/code&gt;. For
TextFrames, a placeholder object called &lt;code&gt;SwVirtFlyDrawObj&lt;/code&gt; is added to the
draw page.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The writer-specific properties of an &lt;code&gt;SdrObject&lt;/code&gt; is stored as an &lt;code&gt;SwFrmFmt&lt;/code&gt;
object, an &lt;code&gt;SwFrmFmt&lt;/code&gt; array is a member of &lt;code&gt;SwDoc&lt;/code&gt; ("frame format table"). The
anchor position and the node index of the frame contents counts as a property.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;At UNO level, a single &lt;code&gt;DrawPage&lt;/code&gt; object is part of the Component (opened
document), which abstracts away the internal &lt;code&gt;SdrPage&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;For TextFrames, the UNO API works exactly the same way, except that the
implementation stores all properties of the TextFrame in the &lt;code&gt;SwFrmFmt&lt;/code&gt; (and
some properties are different, compared to a drawinglayer shape).&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;One remaining detail is how the shape text is represented. In case of
drawinglayer shapes, this is provided by editeng: internally an &lt;code&gt;EditTextObject&lt;/code&gt;
provides a container for paragraphs, at UNO API level &lt;code&gt;SvxUnoTextContent&lt;/code&gt;
provides an interface that presents paragraphs and their text portions.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;For TextFrames, the contents of the frames is stored in a special section in
the Writer text node array (in the 3rd toplevel section, while the 5th
toplevel section is used for body text), that&amp;#8217;s how it can contain anything
that&amp;#8217;s a valid Writer body text. An offset into this node array of the
"content" property of the &lt;code&gt;SwFrmFmt&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="_document_model"&gt;Document model&lt;/h3&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;At a document model level, we need a way to describe that an &lt;code&gt;SdrObject&lt;/code&gt;
(provided by svx) has an associated TextFrame (provided by sw). svx can&amp;#8217;t
depend on sw, but in the &lt;code&gt;SwFrmFmt&lt;/code&gt; of the SdrObject, we can use the so far
unused &lt;code&gt;RES_CNTNT&lt;/code&gt; ("content") property to point to a TextFrame content.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;So behind the scenes the UNO API and the UI does the following when
turning on the TextBox bit for a drawinglayer shape:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
creates a TextFrame
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
connects the &lt;code&gt;SdrObject&lt;/code&gt; to the TextFrame
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Also, every property of the TextFrame depends on the properties of the
&lt;code&gt;SdrObject&lt;/code&gt;, think of the followings:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
position / size is the largest rectangle that fits inside the shape
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
borders are disabled
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
background is transparent
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Finding the largest rectangle that fits inside the shape is probably the most
interesting here, it&amp;#8217;s implemented in &lt;code&gt;SwTextBoxHelper::getTextRectangle()&lt;/code&gt;,
which uses &lt;code&gt;SdrObjCustomShape::GetTextBounds()&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="_uno_api"&gt;UNO API&lt;/h3&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The UNO API hides the detail that the TextFrame and the &lt;code&gt;SdrObject&lt;/code&gt; are in
fact two objects. To get there, the followings are done:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;SwXShape&lt;/code&gt; is modified, so that in the TextBox case not editengine, but the
  attached TextFrame is accessed when &lt;code&gt;getText()&lt;/code&gt; is invoked.
  This was a bit tricky, as &lt;code&gt;SwXShape&lt;/code&gt; doesn&amp;#8217;t have an explicit &lt;code&gt;getText()&lt;/code&gt;
  implementation: it overrides &lt;code&gt;queryInterface()&lt;/code&gt; instead (see
  &lt;code&gt;SwTextBoxHelper::queryInterface()&lt;/code&gt;).
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;SwXDrawPage&lt;/code&gt; (its &lt;code&gt;XEnumerationAccess&lt;/code&gt; and &lt;code&gt;XIndexAccess&lt;/code&gt;) is modified to
  ignore TextFrames in the TextBox case
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;SwXTextPortionEnumeration&lt;/code&gt; is modified to ignore TextFrames in the TextBox case
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;SwXText::insertTextContent()&lt;/code&gt; and &lt;code&gt;SwXText::appendTextContent()&lt;/code&gt; is
  modified to handle the TextBox case
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="_layout"&gt;Layout&lt;/h3&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;This was the easiest part: the "merge TextFrame and &lt;code&gt;SdrObj&lt;/code&gt; into a shape with
TextBox" approach ensured that that we use existing layout features here, no
major effort was necessary here.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;One interesting detail here was the positioning of as-character anchored
shapes having TextBoxes, that&amp;#8217;s now handled in &lt;code&gt;SwFlyCntPortion::SetBase()&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="_filters"&gt;Filters&lt;/h3&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The primary point of this feature is to improve Word (and in particular DOCX)
compatibility, and of course I wanted to update ODF as necessary as well.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Regarding the new feature, I did the followings:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
DOCX import now avoids setting service name from original to
  &lt;code&gt;css.text.TextFrame&lt;/code&gt; in case shape has shape text
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
DOCX export now handles the TextBox case: reads Writer text instead of
  editeng text as necessary
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
ODF export now adds a
  &lt;a href="https://wiki.documentfoundation.org/Development/ODF_Implementer_Notes#List_of_LibreOffice_ODF_extensions"&gt;new
  optional boolean attribute&lt;/a&gt; to make export of the TextBox case possible
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
ODF import now handles the new attribute and act accordingly
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Note that regarding backwards compatibility, we keep supporting
editengine-based text as well. This has the best of two worlds:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
existing ODF documents are unchanged, but
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
the TextBox feature is enabled unconditionally in DOCX import to avoid
  formatting loss
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="_user_interface"&gt;User Interface&lt;/h3&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I took care of the followings:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
the context menu of shapes now provides an item to add / remove a TextBox
  to/from a shape
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
when moving or resizing a shape, the TextBox properties are updated
  as well
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
when the shape is deleted, the associated TextBox is also
  deleted
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
editing individual TextBox properties is no longer possible, since they
  depend on the shape properties
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_summary"&gt;Summary&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;If you want to try these out yourself, get a
&lt;a href="http://dev-builds.libreoffice.org/daily/"&gt;daily build&lt;/a&gt; and play with it! If
something goes wrong, report it to us in the
&lt;a href="https://www.libreoffice.org/get-help/bug/"&gt;Bugzilla&lt;/a&gt;, so we can try fix it
before 4.4 gets branched off. Last, but not at least, thanks for
&lt;a href="http://www.cloudon.com/"&gt;CloudOn&lt;/a&gt; for funding these improvements! :-)&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/textbox.html</link>
            <pubDate>Wed, 16 Jul 2014 13:33:38 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/textbox.html</guid>
        </item>
        <item>
            <title>Updated Writer training slides</title>
            <description>&lt;div style="text-align: center; font-size: 0.6em;"&gt;
&lt;img src="https://lh4.googleusercontent.com/-qJiiajLRZ7A/U7vLBcDzbBI/AAAAAAAAEf0/mo6E4QbfVWU/s400/"/&gt;
&lt;p&gt;(via &lt;a href="https://www.flickr.com/photos/michaeljosh/4382953112/"&gt;michaeljosh&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Last year I
&lt;a href="https://speakerdeck.com/vmiklos/libreoffice-writer-training"&gt;published&lt;/a&gt; some
Writer training slides, which are hopefully a useful extension to in-tree
documentation like
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/tree/sw/README"&gt;sw/README&lt;/a&gt; and
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/tree/sw/qa/extras/README"&gt;sw/qa/extras/README&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Last week I reviewed those slides and realized that some of them are outdated. So here comes an updated version:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="https://speakerdeck.com/vmiklos/writer-training-number-1-2014"&gt;first part&lt;/a&gt;,
  up to, but not including layout
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="https://speakerdeck.com/vmiklos/writer-training-number-2-2014"&gt;second part&lt;/a&gt;,
  starting from the layout
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The intention is that these build nicely on top of Michael&amp;#8217;s
&lt;a href="https://people.gnome.org/~michael/blog/2013-07-26.html"&gt;generic intro&lt;/a&gt; slides,
and with that, the reader can have a good "big picture" understanding of the
code base. For the gory details, you always need to read the code anyway. ;-)&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/lo-writer-training-2014.html</link>
            <pubDate>Tue, 08 Jul 2014 12:52:24 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/lo-writer-training-2014.html</guid>
        </item>
        <item>
            <title>CLUC 2014 Conference</title>
            <description>&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://speakerdeck.com/vmiklos/4-dot-3"&gt;
&lt;img src="https://lh4.googleusercontent.com/-8H5VKexBW1Q/U6Kz9kfXv7I/AAAAAAAAEX8/GVuWhXuueUs/s400/" alt="https://lh4.googleusercontent.com/-8H5VKexBW1Q/U6Kz9kfXv7I/AAAAAAAAEX8/GVuWhXuueUs/s400/" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I&amp;#8217;ve arrived home yesterday from Zagreb where I
&lt;a href="http://2014.dorscluc.org/en/keynotes/#miklos"&gt;gave a keynote&lt;/a&gt; at CLUC 2014
&lt;a href="http://2014.dorscluc.org/en/conference-schedule/"&gt;on Tuesday&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Here are a few talks I enjoyed:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Dave Whiteland&amp;#8217;s &lt;a href="https://www.mysociety.org/"&gt;mysociety.org&lt;/a&gt; talk
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://en.wikipedia.org/wiki/Harald_Welte"&gt;Harald Welte&lt;/a&gt;'s
  &lt;a href="http://osmocom.org/"&gt;osmocom.org&lt;/a&gt; talk
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Elizabeth Krumbach Joseph&amp;#8217;s &lt;a href="http://openstack.org"&gt;OpenStack&lt;/a&gt; talk (explaining
  how do they use gerrit, git-review and related tools)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I also took a &lt;a href="http://vmiklos.hu/panoramas/zagreb.html"&gt;panorama&lt;/a&gt; and some
pictures, available
&lt;a href="https://picasaweb.google.com/104737754628780823336/20140619_Zagrab"&gt;here&lt;/a&gt;,
including photos of some speakers.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Thanks Elizabeth for the above photo, and also to the organizers of the
conference, it was a great one! ;-)&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/cluc2014.html</link>
            <pubDate>Thu, 19 Jun 2014 12:14:12 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/cluc2014.html</guid>
        </item>
        <item>
            <title>Improved handling of track changes in groupshape text</title>
            <description>&lt;div class="paragraph"&gt;&lt;p&gt;Shapes in Writer are provided by LibreOffice&amp;#8217;s drawing layer&amp;#8201;&amp;#8212;&amp;#8201;they are
independent from the normal Writer paragraphs. Given that the drawing layer
does not support tracking changes, just Writer&amp;#8217;s "native" paragraphs, fully
featured tracked changes in real shape text would be quite some work. In case
of ODF, the markup describes tracked changes in a way, so that in case the
reader does not support tracking changes, it can at least read the normal and
inserted text, i.e. the current version.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;This is exactly what I
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=e6300f83d08fd959596551dcd660eb0fbfb248a6"&gt;implemented&lt;/a&gt;
in the DOCX import filter now:&lt;/p&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh5.googleusercontent.com/-8q4PA4ru1KE/U5RZB7SxKdI/AAAAAAAAETs/6_avZ3q04T0/s0/"&gt;
&lt;img src="https://lh5.googleusercontent.com/-8q4PA4ru1KE/U5RZB7SxKdI/AAAAAAAAETs/6_avZ3q04T0/s400/" alt="https://lh5.googleusercontent.com/-8q4PA4ru1KE/U5RZB7SxKdI/AAAAAAAAETs/6_avZ3q04T0/s400/" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Previously we just ignored both inserted and deleted text, so if you had
content which was all either deleted or inserted, you ended up having no shape
text at all (can be tested using e.g.
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/tree/sw/qa/extras/ooxmlimport/data/groupshape-trackedchanges.docx"&gt;this
test document&lt;/a&gt;):&lt;/p&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh4.googleusercontent.com/-NQOH4joafZA/U5RZBjGVO5I/AAAAAAAAETo/3WGNKc3j80c/s0/"&gt;
&lt;img src="https://lh4.googleusercontent.com/-NQOH4joafZA/U5RZBjGVO5I/AAAAAAAAETo/3WGNKc3j80c/s400/" alt="https://lh4.googleusercontent.com/-NQOH4joafZA/U5RZBjGVO5I/AAAAAAAAETo/3WGNKc3j80c/s400/" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;To be fair, the reference layout looks like this:&lt;/p&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh6.googleusercontent.com/-hyCX0lGuEck/U5RZBn27CbI/AAAAAAAAET0/91WKFnyEhQ0/s0/"&gt;
&lt;img src="https://lh6.googleusercontent.com/-hyCX0lGuEck/U5RZBn27CbI/AAAAAAAAET0/91WKFnyEhQ0/s400/" alt="https://lh6.googleusercontent.com/-hyCX0lGuEck/U5RZBn27CbI/AAAAAAAAET0/91WKFnyEhQ0/s400/" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I still hope to fix that as well one day, but the above fix is something we&amp;#8217;ll already provide in 4.3. :-)&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/groupshape-changetracking.html</link>
            <pubDate>Sun, 08 Jun 2014 14:47:42 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/groupshape-changetracking.html</guid>
        </item>
        <item>
            <title>OTRS plugin for Supybot</title>
            <description>&lt;div class="paragraph"&gt;&lt;p&gt;OTRS is quite different to Bugzilla (what we use for upstream LibreOffice
development for quite some time). On the plus side, e.g. it has strong support
for multiple customers. OTOH, it deals with tickets instead of bugs, and sadly
it doesn&amp;#8217;t have a single identifier for tickets. It has a ticket &lt;em&gt;number&lt;/em&gt;
(which by default even includes the date), which is searchable, and it has a
ticket &lt;em&gt;ID&lt;/em&gt;, which is used for URL&amp;#8217;s.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;In case of Bugzilla, you can easily lookup "bug#12345" in Firefox. Create a
bookmark with the following properties:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Location: &lt;a href="https://localhost/bugzilla/show_bug.cgi?id=%s"&gt;https://localhost/bugzilla/show_bug.cgi?id=%s&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Keyword: bug
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;and then you can just copy&amp;amp;paste bug#12345 to Firefox, replace the # with a
space, and Firefox will do the right thing.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Unfortunately (due to the above detailed reasons), this is not possible with
OTRS. So I decided to write a Supybot plugin that can notice "bug#12345" on an
IRC channel, and give you the clickable URL (after finding out the ticket ID
from the ticket number).&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The result is available
&lt;a href="https://github.com/vmiklos/vmexam/tree/master/python/supybot-otrs"&gt;on GitHub&lt;/a&gt;,
it looks like this:&lt;/p&gt;&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;&lt;code&gt;09:58 &amp;lt; vmiklos&amp;gt; bug#1000068
09:58 &amp;lt; supybot&amp;gt; https://localhost/otrs/index.pl?Action=AgentTicketZoom;TicketID=73&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Given that I found no relevant hits when
&lt;a href="https://www.google.com/search?q=supybot+%22otrs%22"&gt;searching&lt;/a&gt; for &lt;em&gt;supybot
otrs&lt;/em&gt;, I hope this code may be useful for others as well.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Thanks to James Scott for his
&lt;a href="https://github.com/scottjab/supybot-youtube"&gt;YouTube&lt;/a&gt; plugin that helped to
quickly figure out the relevant Supybot API&amp;#8217;s.&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/supybot-otrs.html</link>
            <pubDate>Sun, 18 May 2014 11:03:46 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/supybot-otrs.html</guid>
        </item>
    </channel>
</rss>
