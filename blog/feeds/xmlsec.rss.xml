<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>What is Miklos hacking - xmlsec</title><link>https://vmiklos.hu/blog/</link><description></description><lastBuildDate>Thu, 05 Jul 2018 09:08:20 +0000</lastBuildDate><item><title>Improved ECDSA handling in LibreOffice</title><link>https://vmiklos.hu/blog/xmlsec-cng-ecsa.html</link><description>&lt;div id="preamble"&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I wrote about ECDSA handling in LibreOffice
&lt;a href="https://vmiklos.hu/blog/xmlsec-nss-ecdsa.html"&gt;last year&lt;/a&gt;, back then the target
was to be able to verify signatures using the ECDSA algorithm on Linux.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Lots of things happened since then, this post is meant to summarize those
improvements. My personal motivation is that Hungarian eID cards come with a
gov-trusted ECDSA (x509) cert, so handling those in LibreOffice would be nice.
My goals were:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
platforms: handling Windows as well, not only Linux/macOS
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
operations: handling signing as well, not only verification
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
formats: cover all of ODF, OOXML and PDF
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Let&amp;#8217;s see what has happened:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Linux, ODF, sign: we had hardcoded RSA algorithm when generating a signature, now
  we infer the sign algorithm from the signing cert algorithm
  (&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=fd1bc178b02e05cd12ec784ff87f5c97069bc5f5"&gt;commit&lt;/a&gt;)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Linux, OOXML, sign: same problem with hardcoded RSA
  (&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=6b1b8ef51b752f9711d6581283d6c515d3c50d9b"&gt;commit&lt;/a&gt;)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Windows, PDF, sign: the certificate chooser had to be ported to from
  CryptoAPI to
  &lt;a href="https://docs.microsoft.com/en-us/windows/desktop/SecCNG/cng-portal"&gt;CNG&lt;/a&gt;
  (&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=93e33ba279e837356e157745177d7f6061d442b7"&gt;commit&lt;/a&gt;)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Windows, ODF, verify / sign: this was the largest problem, this required a
  whole new libxmlsec backend
  (&lt;a href="https://github.com/lsh123/xmlsec/tree/master/include/xmlsec/mscng"&gt;interface&lt;/a&gt;,
  &lt;a href="https://github.com/lsh123/xmlsec/tree/master/src/mscng"&gt;implementation&lt;/a&gt;, all in
  C90) and also required conditionally using that new backend in LibreOffice
  (&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=71d02f5b6ca78935df3d09ec0a5817f5870b056e"&gt;commit&lt;/a&gt;)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Windows, OOXML, sign: this was almost functional, except that the UI
  recently regressed, now fixed
  (&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=02119ce226ef7c1fcf419aa0933aa95381ee309b"&gt;commit&lt;/a&gt;)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Finally now that everything is ported on Windows to use CNG, I could enable
  it by default yesterday.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I could test hardware-based signing after this, which was fine out of the box
on both platforms. Some screenshots:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Linux:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://farm2.staticflickr.com/1784/29321634078_8818b2d7ba_o.png" alt="https://farm2.staticflickr.com/1784/29321634078_8818b2d7ba_o.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Windows:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://farm1.staticflickr.com/927/42288765505_db72ee48f2_o.png" alt="https://farm1.staticflickr.com/927/42288765505_db72ee48f2_o.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;(There is no reason why this would not work on macOS, but I did not test that.)&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Thanks Gabor Kelemen who helped me to get a sane card reader that has
reasonable driver support on Linux.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;All this is available in master (towards LibreOffice 6.2), or you can grab a
&lt;a href="http://dev-builds.libreoffice.org/daily/master/"&gt;daily build&lt;/a&gt; and try it out
right now. :-)&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Thu, 05 Jul 2018 09:08:20 +0000</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2018-07-05:/blog/xmlsec-cng-ecsa.html</guid><category>xmlsec</category><category>en</category><category>libreoffice</category></item><item><title>ECDSA support in xmlsec-nss, bundled by LibreOffice</title><link>https://vmiklos.hu/blog/xmlsec-nss-ecdsa.html</link><description>&lt;div id="preamble"&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Last month a
&lt;a href="https://bugs.documentfoundation.org/show_bug.cgi?id=105983"&gt;LibreOffice
bugreport&lt;/a&gt; was filed, as the ODF signature created with Hungarian citizen eID
cards is not something LibreOffice can verify. After a bit of research it
seemed that LibreOffice and NSS (what we use for crypto work on Linux/macOS)
is not a problem, but xmlsec&amp;#8217;s NSS backend does not recognize ECDSA keys (RSA
or DSA keys work fine).&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The xmlsec improvements happened in these pull requests:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="https://github.com/lsh123/xmlsec/pull/81"&gt;prepare the xmlsec ECDSA tests&lt;/a&gt;, so
  that they can test not only openssl, but NSS as well
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="https://github.com/lsh123/xmlsec/pull/83"&gt;add initial ECDSA support&lt;/a&gt; (SHA256
  hashing only)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="https://github.com/lsh123/xmlsec/pull/88"&gt;SHA1 support&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="https://github.com/lsh123/xmlsec/pull/89"&gt;SHA512 support&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="https://github.com/lsh123/xmlsec/pull/91"&gt;fix read of uninitialized memory&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;After this the xmlsec code looked good enough. I had to request an update of
the bugdoc in the TDF bug twice, as the signature itself looked also incorrect
initially:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
an attribute type in the signature that had no official abbreviation was
  described as "UNDEF" instead of the dotted decimal form
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="https://tools.ietf.org/html/rfc3279#section-2.2.3"&gt;RFC3279&lt;/a&gt; specifies that an
  ECDSA signature value in general should be ASN1-encoded in general, but
  &lt;a href="https://tools.ietf.org/html/rfc4050#section-3.3"&gt;RFC4050&lt;/a&gt; is specific to XML
  digital signatures and that one says it should &lt;strong&gt;not&lt;/strong&gt; be ASN1-encoded. The
  bugdoc was initially ASN1-encoded.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Finally a warning still remains: while trying to parse the text of the
&lt;code&gt;&amp;lt;X509IssuerName&amp;gt;&lt;/code&gt; element, the dotted decimal form is still not parsed (see
this &lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1342137"&gt;NSS bugreport&lt;/a&gt;). The
bug is confirmed on the mailing list, but no other progress have been made so
far.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Oh, and of course: Windows is still untouched, there a bigger problem remains:
we use CryptoAPI (not CNG) there, and that does not support ECDSA at all.
Hooray for open-source libs where you can add such support yourself. ;-)&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Mon, 13 Mar 2017 09:57:17 +0000</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2017-03-13:/blog/xmlsec-nss-ecdsa.html</guid><category>xmlsec</category><category>en</category><category>libreoffice</category></item></channel></rss>