<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>What is Miklos hacking - libreoffice</title><link>https://vmiklos.hu/blog/</link><description></description><lastBuildDate>Mon, 21 Oct 2019 10:24:32 +0200</lastBuildDate><item><title>Continuous endnotes in Writer</title><link>https://vmiklos.hu/blog/sw-continuous-endnotes.html</link><description>&lt;div id="preamble"&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Writer now has a new "continuous endnotes" compatibility setting in its layout, allowing rendering
endnotes in a way which is closer to what Word users expect.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;First, thanks &lt;a href="https://tu-dresden.de/"&gt;TU Dresden&lt;/a&gt; who made this work by
&lt;a href="https://www.collaboraoffice.com/"&gt;Collabora&lt;/a&gt; possible.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Here is how it looks:&lt;/p&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/g4kmuKduOm-Xc5sHH5oBx9y-U8S6hK5pgamrLxG-5fM9XCRJwMJFEPKxWXrG6IzEQLVpHdxCHI0c45EjDax02SpDbIzyQjZvUd-gsvpTWlkgZ0p3Y5-FDXARIPggF0KyIwG1AFwoiQ=w640" alt="https://lh3.googleusercontent.com/g4kmuKduOm-Xc5sHH5oBx9y-U8S6hK5pgamrLxG-5fM9XCRJwMJFEPKxWXrG6IzEQLVpHdxCHI0c45EjDax02SpDbIzyQjZvUd-gsvpTWlkgZ0p3Y5-FDXARIPggF0KyIwG1AFwoiQ=w640" /&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 1. Writer, new ContinuousEndnodes layout flag enabled&lt;/div&gt;
&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/dlUGc11qUKVvvkKXh5mhj9BlEw4bLxgKxW_t3pNAAu2rnuWuIrFtWdlKk-8nadbSur8CaDe-CIUNJiSJlQSTvA22Q89TkY-uRsdJH3EKX6RcyUJsr-W5YqJrVqaM4KgXAIDPxPXPvg=w640" alt="https://lh3.googleusercontent.com/dlUGc11qUKVvvkKXh5mhj9BlEw4bLxgKxW_t3pNAAu2rnuWuIrFtWdlKk-8nadbSur8CaDe-CIUNJiSJlQSTvA22Q89TkY-uRsdJH3EKX6RcyUJsr-W5YqJrVqaM4KgXAIDPxPXPvg=w640" /&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 2. Reference rendering&lt;/div&gt;
&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/odkN2eqFxYthY7qhxHwStIlodTZJmcUa5wzh6p74PWPT6jKtsAmAvZyNzTjwff_CrDm5AtTcdAq_Rw2QyMNQN1Xr_ypIYL_cEZ3g1DRJof9em6acQ1fxrNQWsx_LxUmBhmu4TkTmPw=w640" alt="https://lh3.googleusercontent.com/odkN2eqFxYthY7qhxHwStIlodTZJmcUa5wzh6p74PWPT6jKtsAmAvZyNzTjwff_CrDm5AtTcdAq_Rw2QyMNQN1Xr_ypIYL_cEZ3g1DRJof9em6acQ1fxrNQWsx_LxUmBhmu4TkTmPw=w640" /&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 3. Writer, old separate endnote page layout&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;What you can see is that endnotes unconditionally start after the end of the document content in
Word, while endnotes are unconditionally on separate endnote pages in Writer. The new
&lt;code&gt;ContinuousEndnotes&lt;/code&gt; layout compatibility flag in Writer allows rendering endnotes the Word way.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;This new flag is enabled by default for DOC files, disabled otherwise.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;All this is available in LibreOffice master (towards 6.4), so you can try it out
&lt;a href="http://dev-builds.libreoffice.org/daily/master/"&gt;right now&lt;/a&gt;, if interested.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Mon, 21 Oct 2019 10:24:32 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2019-10-21:/blog/sw-continuous-endnotes.html</guid><category>en</category></item><item><title>Allow-overlap shape property in Writer</title><link>https://vmiklos.hu/blog/sw-shape-allow-overlap.html</link><description>&lt;div id="preamble"&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Writer now has a new "allow overlap" shape property for anchored objects, which can ensure that
objects with overlapping positioning properties don&amp;#8217;t actually overlap.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;First, thanks &lt;a href="https://tu-dresden.de/"&gt;TU Dresden&lt;/a&gt; who made this work by
&lt;a href="https://www.collaboraoffice.com/"&gt;Collabora&lt;/a&gt; possible.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Here is a video showing how it works:&lt;/p&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:enter;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://youtu.be/DzanTIo941g"&gt;
&lt;img src="https://lh3.googleusercontent.com/fdBYhwk3jykbX7drs6Q3ehQsQyAOBk_GWukw3KzcJBlaMsmgVg0C7KHM1uyODgqIro7HSjOnHzV6zfy9RgdMjY1KJW5K_EmfhyB4d-HyadZszIDAhVGbxUe4DMQbemSiZJA2k0h7vw=w640" alt="https://lh3.googleusercontent.com/fdBYhwk3jykbX7drs6Q3ehQsQyAOBk_GWukw3KzcJBlaMsmgVg0C7KHM1uyODgqIro7HSjOnHzV6zfy9RgdMjY1KJW5K_EmfhyB4d-HyadZszIDAhVGbxUe4DMQbemSiZJA2k0h7vw=w640" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 1. Allow-overlap shape property in Writer&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Under the hood, this is a full new Writer feature, since previously shapes were always allowed to
overlap with each other:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
macros get a new &lt;code&gt;AllowOverlap&lt;/code&gt; shape property (true by default)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
layout takes this into account if you set the property on the UI
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
both DOCX and ODT filters serialize and load this property
  (&lt;a href="https://issues.oasis-open.org/browse/OFFICE-4047"&gt;ODT proposal&lt;/a&gt;)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;All this is available in LibreOffice master (towards 6.4), so you can try it out
&lt;a href="http://dev-builds.libreoffice.org/daily/master/"&gt;right now&lt;/a&gt;, if interested.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Fri, 04 Oct 2019 09:28:26 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2019-10-04:/blog/sw-shape-allow-overlap.html</guid><category>en</category></item><item><title>Bottom to top, left to right writing direction in Writer conference talk</title><link>https://vmiklos.hu/blog/libocon2019.html</link><description>&lt;div id="preamble"&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://speakerd.s3.amazonaws.com/presentations/d34ea52e0ebc4d2f898b246ef786f741/btlr-locon-almeria-2k19.pdf"&gt;
&lt;img src="https://lh3.googleusercontent.com/7A-ATV-MLBkNG6T7cX7kmq2bd7cgsmUs81plgl1ZXlbQIhonNNWZDFMHB5iMPr3NhtT5S_-TO3HTPLh8mqKfUduGDGEZg0LRwRMZO5POBbqn5133-TDo0FipATD9_hlfFe7J19g9Mw=w640" alt="https://lh3.googleusercontent.com/7A-ATV-MLBkNG6T7cX7kmq2bd7cgsmUs81plgl1ZXlbQIhonNNWZDFMHB5iMPr3NhtT5S_-TO3HTPLh8mqKfUduGDGEZg0LRwRMZO5POBbqn5133-TDo0FipATD9_hlfFe7J19g9Mw=w640" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Yesterday I gave a
&lt;a href="https://conference.libreoffice.org/2019/program/schedule/sept-11th-wednesday/"&gt;Bottom to top, left to
right writing direction in Writer&lt;/a&gt; talk at the LibreOffice Conference 2019. The room was
well-crowded&amp;#8201;&amp;#8212;&amp;#8201;perhaps because it was on the first day and in the largest room. ;-)&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;It contains some details which are not available in previous btLr blog posts, like what natural
languages use this direction, how to replace real-world clocks without breaking compatibility and
more!&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I expect quite some other slides from other Collaborans and the wider community will be available on
&lt;a href="http://planet.documentfoundation.org/"&gt;Planet&lt;/a&gt;, don&amp;#8217;t miss them.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;You can get a snapshot / demo of Collabora Office 6.2 and try the presented feature out yourself
right now: &lt;a href="https://www.collaboraoffice.com/collabora-office-latest-snapshot/"&gt;try unstable snapshot&lt;/a&gt;.
Collabora is a major contributor to LibreOffice and all of this work will be available in TDF&amp;#8217;s next
release, too (6.4).&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Thu, 12 Sep 2019 11:27:58 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2019-09-12:/blog/libocon2019.html</guid><category>en</category></item><item><title>btLr text direction in Writer, part 4</title><link>https://vmiklos.hu/blog/btlr-text-direction-in-writer-4.html</link><description>&lt;div class="sect1"&gt;
&lt;h2 id="_the_problem"&gt;The problem&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/meDrX3a3jwfCHpHSpQfS7Tqvy7Cxaumoo5RlnjJ7Qj0fhDgPXeOv7FgRn4Xqesv8IWW3feCV-_lhWOyzZo9ZD5yaxkBrYxd9doRm9x8BJAAdu3QQ1Jj6MIiy5q5FO_d2v5YSbsBUvg=w320" alt="https://lh3.googleusercontent.com/meDrX3a3jwfCHpHSpQfS7Tqvy7Cxaumoo5RlnjJ7Qj0fhDgPXeOv7FgRn4Xqesv8IWW3feCV-_lhWOyzZo9ZD5yaxkBrYxd9doRm9x8BJAAdu3QQ1Jj6MIiy5q5FO_d2v5YSbsBUvg=w320" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I already wrote about the btLr text direction in the context of Writer table cells as a result of a
Collabora hack week (&lt;a href="https://vmiklos.hu/blog/hackweek-2019.html"&gt;part 1&lt;/a&gt;,
&lt;a href="https://vmiklos.hu/blog/btlr-text-direction-in-writer-2.html"&gt;part 2&lt;/a&gt;,
&lt;a href="https://vmiklos.hu/blog/btlr-text-direction-in-writer-3.html"&gt;part 3&lt;/a&gt;). This post is meant to be the
final one (for now), given that both table cells and shapes / text frames are now working nicely
with all major formats.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_the_result"&gt;The result&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The first topic is that whenever I looked at supporting the new bottom-to-top, left-to-right
direction, I always first checked if the more common top-to-bottom, right-to-left direction is
working or not (this is used for e.g. Japanese rotated text). Turns out that Writer text frames were
not exported to drawingML (part of DOCX), so I fixed that.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Similarly, there is the older shape markup in DOCX: VML. The tbRl direction from that was broken,
too, now working nicely.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Then I could actually look at the btLr import from VML, which is now correct.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;One of the motivations for this work was to get rid of the old, miserable hack where we did
character-level rotation during import (which falls apart for multi-paragraph text). If the import
mapping in itself is not painful enough, we had to undo the effect of this import hack at export
time. When I could remove the last usage of this dreaded &lt;code&gt;checkFrameBtlr()&lt;/code&gt; function in the export
code, I mentally did a little dance. ;-)&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Back to btLR fixing, exporting Writer text frames to DOCX is not interesting when you do DOCX
editing, but it&amp;#8217;s very much relevant when you do ODT &amp;#8594; DOCX conversion. And the btLr case was of
course not handled, fixed now.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;RTF was broken in 4 different ways: import and export was broken for the btLr and the tbRl cases for
text frames.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The last thing was the binary DOC export, where btLr text frames were not handled.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;With these sorted out, I think the topic of table cells and shapes / text frames are now supported
reasonably well. ODF could do the btLr writing direction for sections and pages as well, but I don&amp;#8217;t
see that as a priority. And hey, Word doesn&amp;#8217;t support them, either. :-)&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_want_to_start_using_this"&gt;Want to start using this?&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;You can get a snapshot / demo of Collabora Office and try it out yourself right now:
&lt;a href="https://www.collaboraoffice.com/collabora-office-latest-snapshot/"&gt;try unstable snapshot&lt;/a&gt;.  Collabora
is a major contributor to LibreOffice and all of this work will be available in TDF&amp;#8217;s next release,
too (6.4).&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Fri, 16 Aug 2019 09:24:45 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2019-08-16:/blog/btlr-text-direction-in-writer-4.html</guid><category>en</category></item><item><title>Commenting on images and charts in Writer</title><link>https://vmiklos.hu/blog/writer-image-comments.html</link><description>&lt;div class="sect1"&gt;
&lt;h2 id="_the_problem"&gt;The problem&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Years ago I &lt;a href="https://vmiklos.hu/blog/lo-sw-comment-range.html"&gt;posted&lt;/a&gt; about work to attach comments to
text ranges. This improved compatibility with Word greatly, but it was always a piece of text that
was commented, never frames. If you just selected a frame and tried to comment by selecting the menu
entry or the &lt;code&gt;Ctrl-Alt-C&lt;/code&gt; shortcut, nothing happened, because frame selection did not interpret
comment insertion.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_result"&gt;Result&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/PvlDM6Ox1UBEXj57F4SyBN5hlv1sjJHjI4VjmwIoM-3btxSR1Uh5HAwch_tw95vDOhdSZnEbDPkuYYAU2iiHvSeHafFtToGQzntEqO8wGgkDgmIOxGBXWw6vdTPQlgPPF3lFd0ES8Q=w640" alt="https://lh3.googleusercontent.com/PvlDM6Ox1UBEXj57F4SyBN5hlv1sjJHjI4VjmwIoM-3btxSR1Uh5HAwch_tw95vDOhdSZnEbDPkuYYAU2iiHvSeHafFtToGQzntEqO8wGgkDgmIOxGBXWw6vdTPQlgPPF3lFd0ES8Q=w640" /&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 1. Comment on an at-char anchored image in Writer&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Examples for frames are images or charts. This needs explicit handling, so at the moment the at-char
and as-char anchor types are supported, and you can simply insert the comment to a frame once the
frame is selected. This works in both desktop Writer and Online.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_want_to_start_using_this"&gt;Want to start using this?&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;You can get a snapshot / demo of Collabora Office and try it out yourself right now:
&lt;a href="https://www.collaboraoffice.com/collabora-office-latest-snapshot/"&gt;try unstable snapshot&lt;/a&gt;.  Collabora
is a major contributor to LibreOffice and all of this work will be available in TDF&amp;#8217;s next release
too (6.4).&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Tue, 16 Jul 2019 12:11:23 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2019-07-16:/blog/writer-image-comments.html</guid><category>en</category></item><item><title>btLr text direction in Writer, part 3</title><link>https://vmiklos.hu/blog/btlr-text-direction-in-writer-3.html</link><description>&lt;div id="preamble"&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I already wrote about the btLr text direction in the context of Writer table cells as a result of a
&lt;a href="https://www.collaboraoffice.com/"&gt;Collabora&lt;/a&gt; hack week (&lt;a href="https://vmiklos.hu/blog/hackweek-2019.html"&gt;part
1&lt;/a&gt;, &lt;a href="https://vmiklos.hu/blog/btlr-text-direction-in-writer-2.html"&gt;part 2&lt;/a&gt;). The next step in this
journey is btLr text direction of Writer Text Frames, and building on top of that: DOCX Text Boxes.
Here is a series of screenshots showing the result:&lt;/p&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/mHrS3KHuLf4tnWOZTw83jJiF3bJ6Ti8fiHXSJlqBFwrdDEpCdS9m_mTfHQPhOXNbZ5atXkagrGO7fSAJPSUo9pEm73UMr_kT6oVwOLCjZwxR9NB_EsLxHUXmUtUiSq0Zr-C0_TNLMg=w640" alt="https://lh3.googleusercontent.com/mHrS3KHuLf4tnWOZTw83jJiF3bJ6Ti8fiHXSJlqBFwrdDEpCdS9m_mTfHQPhOXNbZ5atXkagrGO7fSAJPSUo9pEm73UMr_kT6oVwOLCjZwxR9NB_EsLxHUXmUtUiSq0Zr-C0_TNLMg=w640" /&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 1. tdf104353.docx, baseline&lt;/div&gt;
&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/haH8Tu0CiUQ9OHWn3Pc9PJ8pP6fEwpGZtrtYUrtkYLYH_BLnLknIA5hBruslE2XIJnuoFjGxYhuFj3GqH4Peu2slIH83ss9vIPMXSn_E5q2Lr80cz2_h7rPuI1DRgJYou6AaOQzAaw=w640" alt="https://lh3.googleusercontent.com/haH8Tu0CiUQ9OHWn3Pc9PJ8pP6fEwpGZtrtYUrtkYLYH_BLnLknIA5hBruslE2XIJnuoFjGxYhuFj3GqH4Peu2slIH83ss9vIPMXSn_E5q2Lr80cz2_h7rPuI1DRgJYou6AaOQzAaw=w640" /&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 2. tdf104353.docx, current&lt;/div&gt;
&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/ZZKDSlC3-VmuVbvvR7nlsNUi6A-mWAj6wJgg2TMzBMg0MQ01kN0iwnHvw_16GDopYT2hNuJwUKWZ5ugbg6TjkJWJ_V5rHwv2fpwumuGLLF29hYYtEPOb0v2en5UHY5p8kHyxTWtYZA=w640" alt="https://lh3.googleusercontent.com/ZZKDSlC3-VmuVbvvR7nlsNUi6A-mWAj6wJgg2TMzBMg0MQ01kN0iwnHvw_16GDopYT2hNuJwUKWZ5ugbg6TjkJWJ_V5rHwv2fpwumuGLLF29hYYtEPOb0v2en5UHY5p8kHyxTWtYZA=w640" /&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 3. tdf104353.docx, reference&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;You can see that the bug document is some kind of card you can print and fold in the middle: no
matter if you are in front of the card or you are behind it, you always see the name and details of
the person. Sure, you can do the same with a table with no borders, but using a Text Frame for this
purpose is a sane use-case.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The text from the 3 paragraphs used to have the same horizontal position, and now it&amp;#8217;s laid out the
same way as Word does it.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Technically, this result is just the last commit in a series. I fixed the following problems since
the last blog post on this topic:&lt;/p&gt;&lt;/div&gt;
&lt;div class="olist arabic"&gt;&lt;ol class="arabic"&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=0013f21ecd918e0541f165c3526a58f42dd75481"&gt;tdf#124344 sw btlr writing mode, DOCX import: fix vertical alignment&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=8072a926da2a02dfaf3fa848a2976634641a594f"&gt;tdf#124521 sw btlr writing mode render: fix paint rectangle on scroll&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=ff17478e069cc82681df62514876c06365dd5cd6"&gt;sw btlr writing mode: implement DOCX shape import for tbrl&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=cd2a7acd789297e613424a59b2fe24cedd9a72b6"&gt;sw btlr writing mode: implement ODF filter for textframes&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=8a26e4b26f0153fb8ca5da880ee4aa44748ee4df"&gt;sw btlr writing mode: implement layout for fly frames&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=52e47276694575f119192f6ddafa69ec7a7eb6b4"&gt;sw btlr writing mode: implement UI for fly frames&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=ad96f6f378a9fce11c2f7d9ad39a8203189444e3"&gt;sw btlr writing mode: fix btlr &amp;lt;-&amp;gt; tbrl switch for fly frames&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=9c945cdbe170104cbacafa2c37babec5210b9ca2"&gt;sw btlr writing mode: DOCX drawingML import for fly frames&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;All this is available in LibreOffice master (towards 6.4), so you can try it out right now, if
interested.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Fri, 14 Jun 2019 09:36:09 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2019-06-14:/blog/btlr-text-direction-in-writer-3.html</guid><category>en</category></item><item><title>Importing charts from DOCX drawingML group shapes in Writer</title><link>https://vmiklos.hu/blog/writer-wpg-chart-import.html</link><description>&lt;div id="preamble"&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/Jw_BHWWDubfGASjfFszFu6q9VRXaELjjLun974YCt7pQv3P-WIKqkISu5GHwTNndCHi8jGqv_FvYTZFXdWfxASIzXbgw0Et-7rAQZ3LzxA5Ntxx0GTxRH3y4m3hOYVLMKAyXtCQECQ=w640" alt="https://lh3.googleusercontent.com/Jw_BHWWDubfGASjfFszFu6q9VRXaELjjLun974YCt7pQv3P-WIKqkISu5GHwTNndCHi8jGqv_FvYTZFXdWfxASIzXbgw0Et-7rAQZ3LzxA5Ntxx0GTxRH3y4m3hOYVLMKAyXtCQECQ=w640" /&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 1. Chart in drawingML group shape in DOCX, imported into Writer&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Years ago I &lt;a href="https://vmiklos.hu/blog/lo-writer-drawingml-shape-improvements.html"&gt;posted&lt;/a&gt; about a large
rework to where &lt;a href="https://www.collaboraoffice.com/"&gt;Collabora&lt;/a&gt; helped a customer to make Writer read
the drawingML markup for DOCX shapes. You can read the various benefits of this switch in that
article&amp;#8201;&amp;#8212;&amp;#8201;but similar to other large reworks, this also broke some previously working corner-cases,
where test coverage lacked.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;One of these is charts in group shapes. This needs explicit handling, as Writer normally handles
charts as TextEmbeddedObjects, while code that imports charts from OOXML is not specific to Writer.
The
&lt;a href="https://cgit.freedesktop.org/libreoffice/core/commit/?id=fdf4aaa3dc5cc1d2e7a112e6c32d7845f13caef8"&gt;fix&lt;/a&gt;
just tells the generic drawingML import to use a Writer-specific service name for the charts.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;This is available in LibreOffice master (towards 6.3).&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Wed, 15 May 2019 09:29:57 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2019-05-15:/blog/writer-wpg-chart-import.html</guid><category>en</category></item><item><title>btLr text direction in Writer, part 2</title><link>https://vmiklos.hu/blog/btlr-text-direction-in-writer-2.html</link><description>&lt;div id="preamble"&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I already wrote about the &lt;a href="https://vmiklos.hu/blog/hackweek-2019.html"&gt;btLr text direction&lt;/a&gt; in the
context of Writer table cells as a result of a &lt;a href="https://www.collaboraoffice.com/"&gt;Collabora&lt;/a&gt; hack
week. This is meant to be an update to present what happened in the past 2 months. Here is a video
showing the results:&lt;/p&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://youtu.be/79z9XDdH4x8"&gt;
&lt;img src="https://lh3.googleusercontent.com/RnesyNWGxQM4R255yFIVx_6_ft0Qu38rE10k22dblhzB8J5IG-W5RfNdncu_xtwYfXe-D7GtX7CJVKtspcQVflW2YiWm1EWf9ed3IqH4_bw-ElSKqE2OR4mRsCUcaJrSf61xy4Me_g=w640" alt="https://lh3.googleusercontent.com/RnesyNWGxQM4R255yFIVx_6_ft0Qu38rE10k22dblhzB8J5IG-W5RfNdncu_xtwYfXe-D7GtX7CJVKtspcQVflW2YiWm1EWf9ed3IqH4_bw-ElSKqE2OR4mRsCUcaJrSf61xy4Me_g=w640" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 1. Before / after screen recording for the below mentioned changes&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I fixed the following problems since the last blog post on this topic:&lt;/p&gt;&lt;/div&gt;
&lt;div class="olist arabic"&gt;&lt;ol class="arabic"&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=31f896bb6ef922cf4250c6b971fb9d24a60592b5"&gt;sw
  btlr writing mode shell: fix up/down cursor travelling&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=8ae5a98852c2f3d87d6efff598f0c7d54df835d3"&gt;sw
  btlr writing mode shell: left/right cursor travelling, fix dest para&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=404bfc6f78549d16de193794960a9c9ab7604511"&gt;sw
  btlr writing mode shell: left/right cursor travelling, fix vert pos&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=2f83055cdbd915d5036a7b4374b4ad10e6efc65f"&gt;sw
  btlr writing mode shell: fix cursor selection&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=4c5d0e4822dcd0c6c9397a45e3afb66d53ebaafc"&gt;tdf#123943
  sw btlr writing mode render: fix text portion background&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=89e5b431d468745da3a1eff14d48296107b9101b"&gt;sw
  btlr writing mode: implement DOC filter&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=e651a4f45b310f9890ffbf712b9970d4c452ecec"&gt;tdf#124261
  sw btlr writing mode render: fix invalidation rectangle&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=b62bfda66c1499806bfa35c26fdc05f76f8a4db2"&gt;sw
  btlr writing mode: implement RTF export&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;All this is available in LibreOffice master (towards 6.3), so you can try it out right now, if
interested.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Mon, 15 Apr 2019 09:13:19 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2019-04-15:/blog/btlr-text-direction-in-writer-2.html</guid><category>en</category></item><item><title>SmartArt improvements in LibreOffice, part 4</title><link>https://vmiklos.hu/blog/smartart-improvements-4.html</link><description>&lt;div id="preamble"&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I recently &lt;a href="https://vmiklos.hu/blog/smartart-improvements-3.html"&gt;dived into&lt;/a&gt; the SmartArt
support of LibreOffice, which is the component responsible for displaying
complex diagrams from PPTX. I focus on the case when only the document model
and the layout constraints are given, not a pre-rendered result.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;First, thanks to our partner &lt;a href="https://www.suse.com/"&gt;SUSE&lt;/a&gt; for working with
&lt;a href="https://www.collaboraoffice.com/"&gt;Collabora&lt;/a&gt; to make this possible.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_organization_chart_cycle_matrix_and_picture_strip"&gt;Organization Chart, Cycle Matrix and Picture Strip&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;In this post I would like to present the progress done earlier this year
regarding the above mentioned diagram types&amp;#8201;&amp;#8212;&amp;#8201;these are used in many
documents.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The improvement (as always) come in small incremental steps:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Organization Chart is the most complex type I dealt with so far. I fixed
  several issues (font color, vertical ordering, multiple paragraphs in a data
  node, size of layout nodes, better support for &lt;code&gt;hierBranch&lt;/code&gt; conditions, the
  type of connector shapes). This allows giving readable result for diagrams
  which are more complex than the simple 3-node one presented in the previous
  post.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Cycle Matrix: there were missing child nodes here, the composite algorithm
  needed improved handling of position / size from constraints and the ordering
  / fill / line properties of actual content also needed fixing.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Picture Strip: the biggest problem here was the lack of pictures, but also
  the existing snake algorithm needed improvements (size, positioning, spacing
  and margins of the child shapes were not great).
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;With all these fixed, we reach a much better state for the mentioned diagram
types.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_results_so_far"&gt;Results so far&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The SmartArt test documents from
&lt;a href="https://cgit.freedesktop.org/libreoffice/core/tree/sd/qa/unit/data/pptx/"&gt;sd/qa/unit/data/pptx/&lt;/a&gt;
is what I used for testing this work.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Here is how the baseline, the current and the reference rendering of Organization Chart looks like:&lt;/p&gt;&lt;/div&gt;
&lt;div style="text-align: center"&gt;
&lt;img src="https://lh3.googleusercontent.com/IFMh0QgOGTrqjFa9Hn0clhOg5tnLZDt-TZ4kTOT8lF3vPfqTiOu1GmnL0rKLS2MD0XKQ6dJAMm-T4h3BYY6Q4K7C6yVpQo5AQPZCAL4LI4q6Poo-J0bkZ3xM2Iq8WthdmTWxlinlRw=w640" style="max-width: 100%;"/&gt;
&lt;p&gt;smartart-org-chart.pptx, baseline&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align: center"&gt;
&lt;img src="https://lh3.googleusercontent.com/m_01y4wA6IclexE7OD92JJnKf_jzC5j2VDXHlVr5BJ7qxzCk4QMdJkhcgiJbzVYp4i1KBsXdHdYS-EAj8-TlUpsSq4m1TZv6SWkTyVl_A4mMRjwOcX_IYFF3QXG7es_fK2RYWbbMYA=w640" style="max-width: 100%;"/&gt;
&lt;p&gt;smartart-org-chart.pptx, current&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align: center"&gt;
&lt;img src="https://lh3.googleusercontent.com/PtXv5C_8nxo1uQb9CQe4tCgZbCga2CfFHMV-Xf6l_VQpRhf2psk_9mFFhC0sLjo-EjDS7-hUA7nu83OpaUQt8AOliX_1U0tuT83n0MdzbviySaLcBEiv7QvhHP4UC1P-ieGA7lTDcg=w640" style="max-width: 100%;"/&gt;
&lt;p&gt;smartart-org-chart.pptx, reference&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;And here is how the baseline, the current and the reference rendering of Cycle Matrix looks like:&lt;/p&gt;&lt;/div&gt;
&lt;div style="text-align: center"&gt;
&lt;img src="https://lh3.googleusercontent.com/OLqkm14usMrgSbfvujD_xjcclNR5doYpIrTFWipe6bh7Sqa5JiklMpM2pf2LRJq_FH_noojtO5O1jwOdCDEr3ds0PLy370j4oe2vAqyOgTjZUlhoZDqKq1n6_ebYw-wbVyV_MzhLAA=w640" style="max-width: 100%;"/&gt;
&lt;p&gt;smartart-cycle-matrix.pptx, baseline&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align: center"&gt;
&lt;img src="https://lh3.googleusercontent.com/dP3etlvuwYC7Gsz02eI2czJ7_2A7bwPjtCtvBnoVAGOZE1X-P8ePru1qntUFEGs8RicDx9vPgaS0M3n1-J1JsyxfdQhR1THqzLr4J6MEa2Dnvigb4jflVL9auckmgf1PobtjGnGInA=w640" style="max-width: 100%;"/&gt;
&lt;p&gt;smartart-cycle-matrix.pptx, current&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align: center"&gt;
&lt;img src="https://lh3.googleusercontent.com/vT-wucpcp2sjK6DgYdcYGPx0LlucGb58N06pKczbjBepyS1dokrbs9LUMy6uLrN-AfW4xeXRTONB8asX7u2N7NN3ePag3qrqNtMKW6DOfQeTnRtA3E2n1U1B_-GyGJNP49_HOxBInQ=w640" style="max-width: 100%;"/&gt;
&lt;p&gt;smartart-cycle-matrix.pptx, reference&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;And finally here is how the baseline, the current and the reference rendering of Picture Strip looks like:&lt;/p&gt;&lt;/div&gt;
&lt;div style="text-align: center"&gt;
&lt;img src="https://lh3.googleusercontent.com/pqGHTyFD78IDwCdHN6qOVH0MXYAouGmuUQ8GGBYEDeDN_bVV_74zJFcwXr1899NsOuqsEERiddYRdyTZurRh6JQXgvMyJSzlsyWI55cURmN6eod-sYxDbfZU9JxOBYH15kukUDB2cw=w640" style="max-width: 100%;"/&gt;
&lt;p&gt;smartart-picture-strip.pptx, baseline&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align: center"&gt;
&lt;img src="https://lh3.googleusercontent.com/DeDJLYZkV3_GwcIATCNkurGNUyIVufbM8Q2OWw3uTQzK1BmIB8y_lWa1Zk_SG5RTYtts8SVjvJOD201p7Hf0MbzhMRrdleHAvUewXzQ7mxmtLfp_AP7hCKfSYAsXDExn-pW81268ng=w640" style="max-width: 100%;"/&gt;
&lt;p&gt;smartart-picture-strip.pptx, current&lt;/p&gt;
&lt;/div&gt;
&lt;div style="text-align: center"&gt;
&lt;img src="https://lh3.googleusercontent.com/BhTkpbMpIyFOwFTQUiKtA_g86yRjFKtMeP-lxMos5E4KHg7p7_YEAeJECD_6tuaBlSmU80M6I8HvOgIBMmNFkeXEyVxLp--RmEHTwtNw3ae3QK0Lju5fnD-TrUhVK39TVVwNL4BWZw=w640" style="max-width: 100%;"/&gt;
&lt;p&gt;smartart-picture-strip.pptx, reference&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;This is not not perfect yet, but it&amp;#8217;s clearly a large improvement, all text is
now readable from the diagrams and pictures are no longer missing!&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;All this is available in master (towards LibreOffice 6.3), so you can grab a
&lt;a href="http://dev-builds.libreoffice.org/daily/master/"&gt;daily build&lt;/a&gt; and try it out
right now. :-)&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Fri, 22 Mar 2019 09:24:07 +0000</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2019-03-22:/blog/smartart-improvements-4.html</guid><category>en</category></item><item><title>My hack week at Collabora: btLr text direction in Writer</title><link>https://vmiklos.hu/blog/hackweek-2019.html</link><description>&lt;div id="preamble"&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;As mentioned in my &lt;a href="https://vmiklos.hu/blog/hackweek-2016.html"&gt;previous&lt;/a&gt; such
report, a hack week is when we are allowed to hack on anything we want in
LibreOffice for a few days at &lt;a href="https://www.collaboraoffice.com/"&gt;Collabora&lt;/a&gt;. I
used this time to implement core support for the btLr text direction in
Writer.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_motivation"&gt;Motivation&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;If you work with tables in Word, it&amp;#8217;s very easy to create this writing
direction: the context menu in a table cell has a menu item to set the
direction of the text, where you can rotate the text by 90 degrees
counter-clockwise or clockwise. The counter-clockwise btLr direction is the
problematic one. Support for tbRl was fine already, since that is needed
typically for Chinese/Japanese scripts as well.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_results_so_far"&gt;Results so far&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Here is how the baseline, the current and the reference rendering of btLr text looks like:&lt;/p&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/o5t6-JQeeNaZpx0YURMvS6xUJv7L4KbkbKnn6VPQ0yzULxHFI15ufkwaw_m0FVY7B2tv8gOnTw1CEY2Uxq6BFTgXHlcorXS52J8X1-mNjsyHKYDmoNG-MQ9X1LtdUWmrLl_W3b2ifQ=w640" alt="https://lh3.googleusercontent.com/o5t6-JQeeNaZpx0YURMvS6xUJv7L4KbkbKnn6VPQ0yzULxHFI15ufkwaw_m0FVY7B2tv8gOnTw1CEY2Uxq6BFTgXHlcorXS52J8X1-mNjsyHKYDmoNG-MQ9X1LtdUWmrLl_W3b2ifQ=w640" /&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 1. btlr-cell.docx, baseline&lt;/div&gt;
&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/Y8jXvq7TFyNoKVjwWd_QvJNJaOySZdKZE_HqqBaTwGoi_rExCee3eDAHx4AS49E7d7bcjG8SEgxnXOmdKFXaJx0MzmadungQ7D0SVqdSqC2trMC9InsHdKUTq1iwu5p8bDwUfIizng=w640" alt="https://lh3.googleusercontent.com/Y8jXvq7TFyNoKVjwWd_QvJNJaOySZdKZE_HqqBaTwGoi_rExCee3eDAHx4AS49E7d7bcjG8SEgxnXOmdKFXaJx0MzmadungQ7D0SVqdSqC2trMC9InsHdKUTq1iwu5p8bDwUfIizng=w640" /&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 2. btlr-cell.docx, current&lt;/div&gt;
&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;img src="https://lh3.googleusercontent.com/KYSBaOiAMdy_U8shsb4zoS8J5uyZzwkFPZY4qIKTrHKlo-M-pCdiHHBUxZ9OmQ-uv_QkBiktXeprTQD6gANDvzDVi8JWs4-Ng2RL-uoMcQCrQNL6Hk7tjXSJBaaqxc2skfZzmepkqA=w640" alt="https://lh3.googleusercontent.com/KYSBaOiAMdy_U8shsb4zoS8J5uyZzwkFPZY4qIKTrHKlo-M-pCdiHHBUxZ9OmQ-uv_QkBiktXeprTQD6gANDvzDVi8JWs4-Ng2RL-uoMcQCrQNL6Hk7tjXSJBaaqxc2skfZzmepkqA=w640" /&gt;
&lt;/div&gt;
&lt;div class="title"&gt;Figure 3. btlr-cell.docx, reference&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;You can see how the second paragraph in the cell was missing from the rendered
result and now we basically pixel-by-pixel match the reference.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_how_is_this_implemented"&gt;How is this implemented?&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;If you would like to know a bit more about how this works, continue reading&amp;#8230; :-)&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=db346dde6179e7414289681d91b153a6ed259d05"&gt;document
model&lt;/a&gt; and
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=052b5d375307245223e694bb835d86966c370d3b"&gt;UNO
API&lt;/a&gt; were reasonably straightforward to implement, but the layout was much
more challenging. Writer already supported 3 writing directions:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
typically used for Latin (left to right, top to bottom)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Chinese/Japanese (top to bottom, right to left)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Mongolian (top to bottom, left to right) text.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;This new one is also a vertical direction, also left to right, but bottom to
top. The
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=e8b9572bf89f55463f2c879a401ed62efc165d95"&gt;initial
layout&lt;/a&gt; contained code to read the new enumerator from doc model, extend the
SwFrame class to handle this new bottom to top mode, some handling of
switching between horizontal/vertical mode and at the end mapping from Writer
layout&amp;#8217;s direction to VCL&amp;#8217;s "900" font orientation. There are more things to
handle in layout, but this was good enough to look at other areas as well.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=8af98ac8bf0ac8795999ecbf061d3c094f7c3be4"&gt;ODF
filter&lt;/a&gt; required updating, which was a bit challenging as it was necessary to
write different attribute names depending on which enumerator is used from an
emumeration, and we don&amp;#8217;t have good support for this. Once the filter code was
in place, I could write some
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=bef3818dbedba467a257e2573e298d98062be37b"&gt;layout-level
tests&lt;/a&gt; as well.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Since we have .ui files for UI descriptions, adding
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=081b753d4cb4f4a25073ca7de12a7bdaa9fc2be4"&gt;UI
support&lt;/a&gt; was really easy.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Time came to step away from coding for a moment and write up paperwork to
&lt;a href="https://issues.oasis-open.org/browse/OFFICE-4030"&gt;propose&lt;/a&gt; this feature to be
part of the next ODF version (thanks to Andras for the help there!).&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Finally I went back to layout, and improved things a bit more: after
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=a0bb480364c80192111ecab3501d63584e651ea3"&gt;fixing
baseline offsets&lt;/a&gt;, the positioning of the text was exactly matching what Word
does. How do I know? I used this little script:&lt;/p&gt;&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;&lt;code&gt;gs -dNOPROMPT -dBATCH -sDEVICE=jpeg -r75 -dNOPAUSE -sOutputFile=btlr.jpg btlr.pdf
gs -dNOPROMPT -dBATCH -sDEVICE=jpeg -r75 -dNOPAUSE -sOutputFile=btlr-word.jpg btlr-word.pdf
composite -compose difference btlr-word.jpg btlr.jpg out.jpg&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Which allows seeing the differences between our and Word&amp;#8217;s PDF output.
Additional work was needed to handle
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=835d054434d0000a5741a5bfa5f577e855594c40"&gt;multiple
paragraphs&lt;/a&gt; in a table cell. At this stage I was happy enough with the
rendering result, so finally pulled the trigger and replaced the old DOCX
filter hack (using character-level rotation) with
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=8fdbda18b593e7014e44a0fd590bbf98d83258b7"&gt;simple
DOCX filter mapping&lt;/a&gt; from OOXML&amp;#8217;s btLr direction to Writer&amp;#8217;s btLr direction&amp;#8201;&amp;#8212;&amp;#8201;i.e. what was already done for the tbRl case.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_future_work"&gt;Future work&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The feature works good enough already so that this new core feature can be
used by the DOCX filter by default, but there are still a few rough edges:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
the shell code (cursor travelling, selection painting, etc) only has
  &lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=61bb90aac5038b5ff051668f7ae86eb61658e4f3"&gt;partial
  support&lt;/a&gt; for this new direction
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
RTF and DOC filters are not yet updated
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
the ODF proposal has a list of contexts other than table cells where the new
  writing direction could be used, which lack UI/filter support/etc at the moment.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;All this is available in master (towards LibreOffice 6.3), so you can grab a
&lt;a href="http://dev-builds.libreoffice.org/daily/master/"&gt;daily build&lt;/a&gt; and try it out
right now. :-)&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Thu, 21 Feb 2019 15:19:04 +0000</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2019-02-21:/blog/hackweek-2019.html</guid><category>en</category></item></channel></rss>