<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>What is Miklos hacking - libreoffice</title><link>https://vmiklos.hu/blog/</link><description></description><lastBuildDate>Tue, 09 Sep 2025 08:23:48 +0200</lastBuildDate><item><title>Interdependent tracked changes improvements in Writer, part 3</title><link>https://vmiklos.hu/blog/sw-interdependent-redline-improvements3.html</link><description>&lt;p&gt;Writer has some support for interdependent (or hierarchical) tracked changes: e.g. the case when you
have a delete on top of an insert. See the &lt;a href="https://vmiklos.hu/blog/sw-interdependent-redline-improvements2.html"&gt;second
post&lt;/a&gt; for background.&lt;/p&gt;
&lt;p&gt;This work is primarily for &lt;a href="https://www.collaboraonline.com/"&gt;Collabora Online&lt;/a&gt;, but the feature is
available in desktop Writer as well.&lt;/p&gt;
&lt;h2 id="motivation"&gt;Motivation&lt;a class="headerlink" href="#motivation" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With the already mentioned improvements in place, the area of format redlines with character style
or direct formatting changes were still lacking: Writer's original model here was just marking a
text range as "formatted" and then either accept the format redline as-is, or reject reverting back
to the paragraph style (default formatting), losing the old character style or old direct
formatting.&lt;/p&gt;
&lt;h2 id="results-so-far"&gt;Results so far&lt;a class="headerlink" href="#results-so-far" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is a sample case of a document where the old character style is Strong (~bold) and the font
size is 24pt, while the new character style is Quote (~italic) and the font size is 36pt. The rest
of the document uses no specific character styles and has the font size of 12pt:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements3/1-baseline.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements3/1-baseline.png"&gt;&lt;figcaption&gt;Interdependent tracked change: improved format, after document load&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rejecting that format redline resulted in just the defaults, i.e. no character style and 12pt font
size:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements3/2-edit-old.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements3/2-edit-old.png"&gt;&lt;figcaption&gt;Interdependent tracked change: old reject, lost character style / direct format&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But now we track the old character style &amp;amp; direct format:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements3/3-edit-new.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements3/3-edit-new.png"&gt;&lt;figcaption&gt;Interdependent tracked change: new reject, handled character style / direct format&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This required changes in the DOCX import, ODF import and ODF export, too.&lt;/p&gt;
&lt;h2 id="how-is-this-implemented"&gt;How is this implemented?&lt;a class="headerlink" href="#how-is-this-implemented" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you would like to know a bit more about how this works, continue reading... :-)&lt;/p&gt;
&lt;p&gt;As usual, the high-level problem was addressed by a series of small changes. Core side:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/7aa34659e2b49bf02a95a17f51e78f3ab9683235"&gt;sw: document DocumentRedlineManager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/da3da0635a30f9b61a913bd7553b5e1278bf260e"&gt;sw: document IDocumentRedlineAccess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/b2919d5b5ee4e057c99219f5541efc388b2d19b7"&gt;sw doc model xml dump: show the item set of a format redline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/d7bf3a17cb27da1a58163e9db657f0a8d8344901"&gt;tdf#166319 sw interdependent redlines: fix redo of accept of ins-then-fmt's fmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/f66d63da05dbe2f254ffaf428257684a38523f66"&gt;tdf#166319 sw interdependent redlines: handle deleting a self ins-then-fmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/1ba53f5ebbd57b7baf72240784d18954688a09b9"&gt;tdf#166319 sw interdependent redlines: fix redo of reject of del-then-fmt's fmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/e545ada3501780ee6552bbfa19954794e0440d46"&gt;tdf#167194 sw redline reinstate: fix handling of self-inserts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/2db0a779944f9496371b3ba68f7494c635ad431d"&gt;tdf#167761 sw format redline: register the item set in the autostyle pool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/b78bdc9eb15fedd22ece76aeb1b43df40caf3b82"&gt;tdf#167761 sw format redline: implement ODF export&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/0e21f3b36cbd12787021c3b8ef439aab9a09efdd"&gt;tdf#167761 sw format redline, char props: implement ODF import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/a6d8608595fd1ecfdff35c2003a28589ea1214ad"&gt;tdf#167761 sw format redline, char style: implement DOCX import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/0ba6dd9eb3f342345663b12527a29425675d2078"&gt;tdf#167761 sw format redline, char style: implement ODF import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/43104ad996bc9b292b66d9e605632407cb59c4c6"&gt;tdf#167761 sw format redline, char style: fix missing encode in ODF filter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/c625247680cd5737723154b9a73c45e786611b44"&gt;tdf#167761 sw format redline, char style+direct: add ODT export&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/bbebb3908ff9a9c384a475737ead537906517387"&gt;tdf#167761 sw format redline, char style+direct: add ODT import&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="want-to-start-using-this"&gt;Want to start using this?&lt;a class="headerlink" href="#want-to-start-using-this" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can get a development edition of Collabora Online 25.04 and try it out yourself right now: &lt;a href="https://www.collaboraonline.com/code/"&gt;try
the development edition&lt;/a&gt;.  Collabora intends to continue
supporting and contributing to LibreOffice, the code is merged so we expect all of this work will be
available in TDF's next release too (26.2).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Tue, 09 Sep 2025 08:23:48 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2025-09-09:/blog/sw-interdependent-redline-improvements3.html</guid><category>libreoffice</category><category>en</category></item><item><title>Multi-page floating tables in Writer: keep together or not</title><link>https://vmiklos.hu/blog/sw-floattable12.html</link><description>&lt;p&gt;This post is part of a series to describe how Writer now gets a feature to handle tables that are
both floating and span over multiple pages.&lt;/p&gt;
&lt;p&gt;This work is primarily for &lt;a href="https://www.collaboraoffice.com/"&gt;Collabora Online&lt;/a&gt;, but is useful on
the desktop as well. See the &lt;a href="https://vmiklos.hu/blog/sw-floattable11.html"&gt;11th post&lt;/a&gt; for the previous part.&lt;/p&gt;
&lt;h2 id="motivation"&gt;Motivation&lt;a class="headerlink" href="#motivation" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Previous posts described the hardest part of multi-page floating tables: making sure that text can
wrap around them and they can split across pages. In this part, we'll look at a conflicting
requirement. On one hand, headings want their text to not split across pages (and shapes anchored
into paragraphs are considered part of the paragraph, too). On the other hand, it should be OK to
have a floating table at the bottom of a page and the following heading to go to the next page.&lt;/p&gt;
&lt;p&gt;It turns out, Writer gave "keep together" a priority, while Word gave "floating tables are OK to
split to a previous page" a priority.&lt;/p&gt;
&lt;p&gt;Note that if you have a shape (e.g. a triangle) and not a floating table, then both Word and Writer
prevents the move of that shape to a previous page (if the shape is anchored in a heading); this
difference was there just for floating tables.&lt;/p&gt;
&lt;h2 id="results-so-far"&gt;Results so far&lt;a class="headerlink" href="#results-so-far" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is how the &lt;a href="https://bugs.documentfoundation.org/show_bug.cgi?id=167222"&gt;tdf#167222&lt;/a&gt; bugdoc
looks like now in Writer:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-floattable12/new.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-floattable12/new.png"&gt;&lt;figcaption&gt;Floating table, followed by heading: new Writer render&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here is how it used to look like:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-floattable12/old.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-floattable12/old.png"&gt;&lt;figcaption&gt;Floating table, followed by heading: old Writer render&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here is the reference rendering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-floattable12/ref.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-floattable12/ref.png"&gt;&lt;figcaption&gt;Floating table, followed by heading: reference render&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This means that we leave layout for shapes unchanged in general: shapes anchored in headings are
still considered to be part of headings and don't split. But for floating tables, we now allow them
to split and use space at a previous page if they fit there.&lt;/p&gt;
&lt;h2 id="how-is-this-implemented"&gt;How is this implemented?&lt;a class="headerlink" href="#how-is-this-implemented" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you would like to know a bit more about how this works, continue reading... :-)&lt;/p&gt;
&lt;p&gt;As usual, the high-level problem was addressed by a series of small changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/77f0dc4347b8802c56121ca1c5ef59209970214a"&gt;tdf#167222 sw floattable: allow split of fly and its keep-together anchor text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/44c0872bf5f1b658b126d8d928c795e74c0e8ecd"&gt;Related: tdf#167222 sw floattable: fix split of fly and its 'keep' anchor text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/e1522e2b1985f6ebdbf442bdbd55cbc5f2b85dd6"&gt;Related: tdf#167222 sw floattable: fix split of fly and its heading text w/ ftn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/a5154c0de7679e2abc78b33b351025ea5e54a479"&gt;sw: fix assertion failure in SwFrameShell::Execute()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/e03da71738c72bbaecb824b4ba356a0a9923a0ff"&gt;Related: tdf#167222 sw floattable: fix split of fly and heading text fit check&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="want-to-start-using-this"&gt;Want to start using this?&lt;a class="headerlink" href="#want-to-start-using-this" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can get a development edition of Collabora Online 25.04 and try it out yourself right now: &lt;a href="https://www.collaboraonline.com/code/"&gt;try
the development edition&lt;/a&gt;.  Collabora intends to continue
supporting and contributing to LibreOffice, the code is merged so we expect all of this work will be
available in TDF's next release too (26.2).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Fri, 15 Aug 2025 08:14:19 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2025-08-15:/blog/sw-floattable12.html</guid><category>libreoffice</category><category>en</category></item><item><title>Interdependent tracked changes improvements in Writer, part 2</title><link>https://vmiklos.hu/blog/sw-interdependent-redline-improvements2.html</link><description>&lt;p&gt;Writer has some support for interdependent (or hierarchical) tracked changes: e.g. the case when you
have a delete on top of an insert. See the &lt;a href="https://vmiklos.hu/blog/sw-interdependent-redline-improvements.html"&gt;first
post&lt;/a&gt; for background.&lt;/p&gt;
&lt;p&gt;This work is primarily for &lt;a href="https://www.collaboraonline.com/"&gt;Collabora Online&lt;/a&gt;, but the feature is
available in desktop Writer as well.&lt;/p&gt;
&lt;h2 id="motivation"&gt;Motivation&lt;a class="headerlink" href="#motivation" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With the already mentioned improvements in place, a few areas were still lacking: we didn't have UI
for all cases where the DOCX import was possible already; combining tracked changes (redlines) were
not complete (so you don't have to reject all parts of a logical redline one by one) and some of the
undo/redo code didn't work as expected.&lt;/p&gt;
&lt;h2 id="results-so-far"&gt;Results so far&lt;a class="headerlink" href="#results-so-far" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is a sample case where the UI was missing to create something that was possible to import from
DOCX: a format redline on top of an insert redline.&lt;/p&gt;
&lt;p&gt;If you had a document with an insert:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements2/1-baseline.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements2/1-baseline.png"&gt;&lt;figcaption&gt;Interdependent tracked change: just insert&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And you selected BBB to mark those characters as bold, we just updated the existing insert redline
to be bold:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements2/2-edit-old.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements2/2-edit-old.png"&gt;&lt;figcaption&gt;Interdependent tracked change: old, format is not tracked separately&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But now we track a format change on top of the insert separately:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements2/3-edit-new.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements2/3-edit-new.png"&gt;&lt;figcaption&gt;Interdependent tracked change: new, format is tracked separately&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is also visible if you open the track changes dialog, which explains that now you have part of
the insert redline covered by a format redline:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements2/4-dialog.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements2/4-dialog.png"&gt;&lt;figcaption&gt;Interdependent tracked change: UI dialog now showing multiple redlines &lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="how-is-this-implemented"&gt;How is this implemented?&lt;a class="headerlink" href="#how-is-this-implemented" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you would like to know a bit more about how this works, continue reading... :-)&lt;/p&gt;
&lt;p&gt;As usual, the high-level problem was addressed by a series of small changes. Core side:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/cc2babfa0a960c7d52ea7997aea19dcf10c12d08"&gt;sw interdependent redlines: fix nPamEndtNI -&amp;gt; nPamEndNI typo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/82b24dd9748c6c0a2990e70bda0960ae26415390"&gt;tdf#166319 sw interdependent redlines: combine on reject of del-then-fmt's fmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/612ba7b2bc5d1d12c10287094263f6d31983a3d8"&gt;tdf#166319 sw interdependent redlines: fix undo of reject of ins-then-del's del&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/eef0dfed817e40cd83e8ba8e290f45c224257f97"&gt;tdf#166319 sw interdependent redlines: add UI to create format inside insert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/0566e8e1776921ecb26f0ddd0546ec10afeed8e0"&gt;tdf#166319 sw interdependent redlines: undo of creating an ins-then-fmt redline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/e06eb6b4a6176692d25c758121012473fe638043"&gt;tdf#166319 sw interdependent redlines: redo of creating an ins-then-fmt redline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/5ed41ca44bee5122a9db4aa946f6e3ecd9432574"&gt;tdf#166319 sw interdependent redlines: fix redo of reject of del-then-fmt's del&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/76c2168a276f0996deeac08ce176525821fb056e"&gt;tdf#166319 sw interdependent redlines: fix bad accept undo action for reject&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="want-to-start-using-this"&gt;Want to start using this?&lt;a class="headerlink" href="#want-to-start-using-this" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can get a development edition of Collabora Online 25.04 and try it out yourself right now: &lt;a href="https://www.collaboraonline.com/code/"&gt;try
the development edition&lt;/a&gt;.  Collabora intends to continue
supporting and contributing to LibreOffice, the code is merged so we expect all of this work will be
available in TDF's next release too (25.8).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Tue, 08 Jul 2025 08:43:10 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2025-07-08:/blog/sw-interdependent-redline-improvements2.html</guid><category>libreoffice</category><category>en</category></item><item><title>Interdependent tracked changes improvements in Writer</title><link>https://vmiklos.hu/blog/sw-interdependent-redline-improvements.html</link><description>&lt;p&gt;Writer has some support for interdependent (or hierarchical) tracked changes: e.g. the case when you
have a delete on top of an insert. While there were some working cases, handling of many
combinations were missing. I started to make systematic improvements in this area in the recent
past, this post gives you an overview what's done so far.&lt;/p&gt;
&lt;p&gt;This work is primarily for &lt;a href="https://www.collaboraonline.com/"&gt;Collabora Online&lt;/a&gt;, but the feature is
available in desktop Writer as well.&lt;/p&gt;
&lt;h2 id="motivation"&gt;Motivation&lt;a class="headerlink" href="#motivation" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;DOCX files in Word can often have overlapping tracked changes: Writer tries to split these up to
make sure there is only one tracked change under the cursor at the same time. Still, it's possible
that you have a tracked change with multiple types: e.g. a delete on top of an insert.&lt;/p&gt;
&lt;p&gt;The focus in on 3 combinations which appear in DOCX files a lot: "insert, then delete", "insert,
then format" and "delete, then format".&lt;/p&gt;
&lt;p&gt;This mostly affects the UI and import/export filters of ODT and DOCX.&lt;/p&gt;
&lt;h2 id="results-so-far"&gt;Results so far&lt;a class="headerlink" href="#results-so-far" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Given an insert, then delete:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements/ins-then-del.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements/ins-then-del.png"&gt;&lt;figcaption&gt;Interdependent tracked change: insert, then delete&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Most operations worked nicely here, but in case your cursor was in the middle of AAA and you did a
reject, followed by an undo, proper handling of that was missing, now implemented.&lt;/p&gt;
&lt;p&gt;But then given an insert, then a format:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements/ins-then-fmt.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements/ins-then-fmt.png"&gt;&lt;figcaption&gt;Interdependent tracked change: insert, then format&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then a handling of more actions were missing:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;DOCX import is now implemented.&lt;/li&gt;
&lt;li&gt;ODT import is now implemented.&lt;/li&gt;
&lt;li&gt;Accepting when you're inside AAA is now implemented: the insert is accepted for BBB but the
   format stays unchanged.&lt;/li&gt;
&lt;li&gt;Rejecting when you're inside AAA is now implemented: the insert is rejected and BBB is also
   removed, together with the format on top of it.&lt;/li&gt;
&lt;li&gt;Accepting the BBB now correctly operates on the insert type, so the format type remains after
   accept.&lt;/li&gt;
&lt;li&gt;If you accept BBB, now the surrounding AAA and CCC also get accepted as well, as expected.&lt;/li&gt;
&lt;li&gt;Now if you reject BBB, then it gets removed from the document, since you rejected an insert.&lt;/li&gt;
&lt;li&gt;When you reject BBB, the surrounding AAA and CCC also get rejected.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The combined implementation of these should give you a smooth feeling in case you're used to how
Word works: if there is a format redline combined with an insert, then the operations act on the
insert type, and format is only accepted/rejected when there is no insert "under" the format.&lt;/p&gt;
&lt;p&gt;Similarly: it's a bit of an implementation detail that Writer splits redlines on DOCX import: so if
you e.g. accept AAA then we combine that with BBB and CCC when it makes sense, so you need to click
a lot less.&lt;/p&gt;
&lt;p&gt;Finally, given a delete, then a format:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements/del-then-fmt.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-interdependent-redline-improvements/del-then-fmt.png"&gt;&lt;figcaption&gt;Interdependent tracked change: delete, then format&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then again handling of some actions were missing:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;DOCX import is now implemented.&lt;/li&gt;
&lt;li&gt;ODT import is now implemented.&lt;/li&gt;
&lt;li&gt;ODT export is now implemented.&lt;/li&gt;
&lt;li&gt;Accepting AAA now correctly operates on the delete type of BBB.&lt;/li&gt;
&lt;li&gt;Rejecting AAA now correctly operates on the delete type of BBB.&lt;/li&gt;
&lt;li&gt;Accepting BBB now correctly works with the delete type.&lt;/li&gt;
&lt;li&gt;Accepting BBB now correctly tries to also accept AAA and CCC, too.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The current state is not yet complete, but it's a big improvement over what we had in the past,
which was mostly focusing on just "insert, then delete".&lt;/p&gt;
&lt;p&gt;You may wonder what about some other cases: if you insert some content with change tracking, that
always creates a new tracked change, so "insert" is never on top of something else. Similarly,
format is always on top of something. Finally the same type is never on top of itself.&lt;/p&gt;
&lt;h2 id="how-is-this-implemented"&gt;How is this implemented?&lt;a class="headerlink" href="#how-is-this-implemented" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you would like to know a bit more about how this works, continue reading... :-)&lt;/p&gt;
&lt;p&gt;As usual, the high-level problem was addressed by a series of small changes. Core side:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/096a40b27d07603880bbf120440ac169a87fe115"&gt;tdf#166319 sw interdependent redlines: fix undo of del on top of ins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/ca7a6a57ad1e8d7aadffbbf3fe28d9aabed31286"&gt;tdf#166319 sw interdependent redlines: handle format on top of insert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/8e85d559a68f980d99af4ded6a91b7f0458048b9"&gt;tdf#166319 sw interdependent redlines: handle accept of insert under format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/3c039cb31239ba01e3d3b56c526bdb7ba6446032"&gt;tdf#166319 sw interdependent redlines: handle reject of insert under format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/96faaaf83a1c8b897ce675d175b4d8756d0ea0df"&gt;tdf#166319 sw interdependent redlines: handle accept of delete under format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/97066d4f5a89ad89d81a45c0b20ce404f9712fc7"&gt;tdf#166319 sw interdependent redlines: fix DOCX export of delete under format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/d659f4b12a24e275e38ec5aa7406c32c9fa08c48"&gt;tdf#166319 sw interdependent redlines: handle reject of delete under format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/ff110bb17b7e003bd205438af94badabeca007c6"&gt;tdf#166319 sw interdependent redlines: handle ODF import of insert under format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/1a340196237ed075b337e6a0ac9f8a45132053bb"&gt;tdf#166319 sw interdependent redlines: handle ODF export of delete under format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/08acfb815745e7f43ca43557feefcb68607d26c1"&gt;tdf#166319 sw interdependent redlines: handle ODF import of delete under format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/8cabdef0b34210d026ea7a8229f321e272a49109"&gt;tdf#166319 sw interdependent redlines: handle accept of ins-then-fmt's fmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/2292bda37378d7f782abbda42c026affd3fa59e5"&gt;tdf#166319 sw interdependent redlines: combine on accept of ins-then-fmt's fmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/b6cba0119f8028b426f5eee55be9761971dbfdee"&gt;tdf#166319 sw interdependent redlines: handle reject of ins-then-fmt's fmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/15bd73a093f1f944d504cf555918ca9e60d75c03"&gt;tdf#166319 sw interdependent redlines: combine on reject of ins-then-fmt's fmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/5fedce78c8d79a3e86307523c3d74c7df98668f7"&gt;tdf#166319 sw interdependent redlines: handle accept of del-then-fmt's fmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/98f0b23a48246507ced6de5b54d327d95f1725f9"&gt;tdf#166319 sw interdependent redlines: combine on accept of del-then-fmt's fmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/569eb476bbdf83aab0f377da5cb7d2e8c77192b8"&gt;tdf#166319 sw interdependent redlines: handle reject of del-then-fmt's fmt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="want-to-start-using-this"&gt;Want to start using this?&lt;a class="headerlink" href="#want-to-start-using-this" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can get a development edition of Collabora Online 25.04 and try it out yourself right now: &lt;a href="https://www.collaboraonline.com/code/"&gt;try
the development edition&lt;/a&gt;.  Collabora intends to continue
supporting and contributing to LibreOffice, the code is merged so we expect all of this work will be
available in TDF's next release too (25.8).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Mon, 02 Jun 2025 13:54:44 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2025-06-02:/blog/sw-interdependent-redline-improvements.html</guid><category>libreoffice</category><category>en</category></item><item><title>Reinstate for tracked changes in Writer</title><link>https://vmiklos.hu/blog/sw-redline-reinstate.html</link><description>&lt;p&gt;Writer has the concept of rejecting tracked changes: if a proposed insertion or deletion is not
wanted, then one can reject it to push back on the proposal. So far such an action left no trace in
the document, which is sometimes not wanted. Calling reinstate on a change behaves like reject, but
with history: it reinstates the original state, with the rejected change preserved in the document.&lt;/p&gt;
&lt;p&gt;This work is primarily for &lt;a href="https://www.collaboraonline.com/"&gt;Collabora Online&lt;/a&gt;, but the feature is
available in desktop Writer as well.&lt;/p&gt;
&lt;h2 id="motivation"&gt;Motivation&lt;a class="headerlink" href="#motivation" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When Alice works on a document to insert e.g. new conditions for a contract, then perhaps Bob is not
happy with the proposal. But just rejecting the change "silently" would not be polite: the tracked
change then disappears, so possibly Alice thinks it was accepted and Bob didn't communicate the
pushback explicitly in the resulting document, either.&lt;/p&gt;
&lt;p&gt;Reinstate is meant to improve this interaction: if an insert is reinstated, then an explicit delete
is created on top of the insert, so Alice can see that Bob was not happy with the proposal. Or in
case Alice proposed a delete, Bob can reinstate that by adding the same content again to the
document, without typing the text manually after the delete.&lt;/p&gt;
&lt;p&gt;This is a UI feature: the resulting model still only contains inserts and deletes, so it works even with
DOCX files.&lt;/p&gt;
&lt;h2 id="results-so-far"&gt;Results so far&lt;a class="headerlink" href="#results-so-far" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Given an insert:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-redline-reinstate/insert.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-redline-reinstate/insert.png"&gt;&lt;figcaption&gt;Reinstate: an insert&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now you can easily create a delete on top of the insert:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-redline-reinstate/insert-after.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-redline-reinstate/insert-after.png"&gt;&lt;figcaption&gt;Reinstate: a reinstated insert&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And given a delete:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-redline-reinstate/delete.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-redline-reinstate/delete.png"&gt;&lt;figcaption&gt;Reinstate: a delete&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now you can easily create an insert right after the delete, preserving complex content:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-redline-reinstate/delete-after.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-redline-reinstate/delete-after.png"&gt;&lt;figcaption&gt;Reinstate: a reinstated delete&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As you can see, this creates the opposite of the original change as a new tracked change, so it will
in the end still reject the change, but without deleting the original change.&lt;/p&gt;
&lt;h2 id="how-is-this-implemented"&gt;How is this implemented?&lt;a class="headerlink" href="#how-is-this-implemented" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you would like to know a bit more about how this works, continue reading... :-)&lt;/p&gt;
&lt;p&gt;As usual, the high-level problem was addressed by a series of small changes. Core side:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/7af8b3d3305fe8344cb9339269c5dc3f1cd44650"&gt;cool#11357 sw redline reinstate: implement this for a single insert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/1df71464588d4cfcba708cf00ef7b6ac94574c8f"&gt;cool#11357 sw redline reinstate: handle inserts in selection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/e312cf46fe840f04b729600db9efe89d5f58d6fe"&gt;cool#11357 sw redline reinstate: handle a single delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/db541619cb1ca83598ec479eb9f52e559a8fe72d"&gt;cool#11357 sw redline reinstate: handle a single rich delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/157c00922959adc8fd2e0203ed94dfd847479c54"&gt;cool#11357 sw redline reinstate: handle deletes in selection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/447935fba57f1b0f88c0b56cccf5bf971fb1e819"&gt;cool#11357 sw redline reinstate: simplify ReinstateRedlinesInSelection()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/9c2c98ac7668e4a3a2e3a70cc54b632de5f79621"&gt;cool#11357 sw redline reinstate: add command state&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/1926105b47df7b15dd34a8c1135f83b936bf9926"&gt;cool#11357 sw redline reinstate: add a reinstate-and-next command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/4535698e0b16bf003e8a3705e28f7347f509eb12"&gt;cool#11357 sw redline reinstate: add a reinstate-all command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/01311bb1e4c2404354cce8934d36991d91d527b2"&gt;cool#11357 sw redline reinstate: avoid unwanted multi- or table selection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/fbf9465e2bc9f878723674d1eff13e0c69656057"&gt;cool#11357 sw redline reinstate: fix undo string for a single redline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/7d702ebbfcda41ce2972e30b2a1e493c320df67c"&gt;cool#11357 sw redline reinstate: fix undo count &amp;amp; string for multiple redlines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/dcd3427149c33852428b4198c22f6f858125c294"&gt;cool#11357 sw redline reinstate: add to the context menu for text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Online side:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/collaboraonline/online/commit/3d7933974241fe5d015a9d80f2cc8bde1c1d352e"&gt;cool#11357 sw redline reinstate: add UI for this&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="want-to-start-using-this"&gt;Want to start using this?&lt;a class="headerlink" href="#want-to-start-using-this" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can get a development edition of Collabora Online 25.04 and try it out yourself right now: &lt;a href="https://www.collaboraonline.com/code/"&gt;try
the development edition&lt;/a&gt;.  Collabora intends to continue
supporting and contributing to LibreOffice, the code is merged so we expect all of this work will be
available in TDF's next release too (25.8).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Thu, 08 May 2025 08:44:48 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2025-05-08:/blog/sw-redline-reinstate.html</guid><category>libreoffice</category><category>en</category></item><item><title>Per-user track changes recording in Writer</title><link>https://vmiklos.hu/blog/sw-per-view-redline-record.html</link><description>&lt;p&gt;Writer has the concept of recording tracked changes or not: if recording, typing into a document or
deleting content will create tracked changes of type insertion or deletion. So far this was a
per-document setting, but now individual users can enable or disable this as they wish.&lt;/p&gt;
&lt;p&gt;This work is primarily for &lt;a href="https://www.collaboraonline.com/"&gt;Collabora Online&lt;/a&gt;, but the feature is
available in desktop Writer as well.&lt;/p&gt;
&lt;h2 id="motivation"&gt;Motivation&lt;a class="headerlink" href="#motivation" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When Alice keeps typing and Bob enables change tracking, then surprisingly the typed characters of
Alice will form a tracked insertion, which is surprising, since that was not the case a second ago
and Alice didn't do anything other than typing.&lt;/p&gt;
&lt;p&gt;Giving users a choice if they enable recording for just this user or for all users fixes this
problem.&lt;/p&gt;
&lt;h2 id="results-so-far"&gt;Results so far&lt;a class="headerlink" href="#results-so-far" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is how the per-user (technically per-view) tracked changes recording looks like:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-per-view-redline/sw-per-view-redline.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-per-view-redline/sw-per-view-redline.png"&gt;&lt;figcaption&gt;Per-view tracked changes recording&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the user on the left has recording turned on and this doesn't influence the user on
the right, while this was not possible before.&lt;/p&gt;
&lt;h2 id="how-is-this-implemented"&gt;How is this implemented?&lt;a class="headerlink" href="#how-is-this-implemented" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you would like to know a bit more about how this works, continue reading... :-)&lt;/p&gt;
&lt;p&gt;As usual, the high-level problem was addressed by a series of small changes. Core side:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/ab91358566ccf31f7a9ac57f1c32a9c62840f5d5"&gt;cool#11226 sw per-view redline on: support this-view &amp;lt;-&amp;gt; all-views transition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/85fc28a4e55bb8dafd69a19dc5d21a76501446cb"&gt;cool#11226 sw per-view redline on: state for the per-view and per-doc commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/368e2e445c1941d37697cee05a50a34150d18015"&gt;cool#11226 sw per-view redline on: allow both per-view and per-doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/745256f37973d89ea068acd831eba8054a81b93b"&gt;Related: cool#11226 sw per-view redline on: fix ratio buttons of is-show&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/ae6d396552cd3cebd7fba4942e6ca2fd5de579af"&gt;cool#11226 sw per-view redline on: add view-aware getter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/e36643877e5ddf57a34481f1c46f87cf250caf19"&gt;cool#11226 sw per-view redline on: move the setter to the model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/025a1e4612fecf59f38910fbf52fc63db054ae5f"&gt;cool#11226 sw per-view redline on: add new flag in SwViewOption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/88e12a83aec0ffda82195c8a1e34a255d3cfdfd5"&gt;cool#11226 sw layout xml dump: show some more view options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Online side:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/collaboraonline/online/commit/c37904149498658c3fd25f043fc5f34be89fb120"&gt;cool#11226 sw per-view redline on: add tri-state UI in the notebookbar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="want-to-start-using-this"&gt;Want to start using this?&lt;a class="headerlink" href="#want-to-start-using-this" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can get a development edition of Collabora Online 25.04 and try it out yourself right now: &lt;a href="https://www.collaboraonline.com/code/"&gt;try
the development edition&lt;/a&gt;.  Collabora intends to continue
supporting and contributing to LibreOffice, the code is merged so we expect all of this work will be
available in TDF's next release too (25.8).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Wed, 02 Apr 2025 13:33:03 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2025-04-02:/blog/sw-per-view-redline-record.html</guid><category>libreoffice</category><category>en</category></item><item><title>Ignoring the paragraph margin at the top of pages in Writer</title><link>https://vmiklos.hu/blog/sw-ignore-margin-page-top.html</link><description>&lt;p&gt;Writer has the concept of paragraph margins and page margins, but what happens when you combine the
two? It turns out the expectation is that sometimes the top paragraph margin is ignored in this
case. We'll see two cases where the behavior of Writer is now improved to better match Word in this
regard.&lt;/p&gt;
&lt;p&gt;This work is primarily for &lt;a href="https://www.collaboraonline.com/"&gt;Collabora Online&lt;/a&gt;, but the feature is
available in desktop Writer as well.&lt;/p&gt;
&lt;h2 id="motivation"&gt;Motivation&lt;a class="headerlink" href="#motivation" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As described in a &lt;a href="https://bugs.documentfoundation.org/show_bug.cgi?id=160952"&gt;previous bugreport&lt;/a&gt;,
there was a first problem where Word ignored the top paragraph margin of a document, but Writer did
not. A &lt;a href="https://bugs.documentfoundation.org/show_bug.cgi?id=164095"&gt;recent bugreport&lt;/a&gt; then pointed
out that the first implementation went too far and now a wanted top margin was ignored. This lead to
a set of conditions which now does a decent emulation of Word's rules in this regard.&lt;/p&gt;
&lt;h2 id="results-so-far"&gt;Results so far&lt;a class="headerlink" href="#results-so-far" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is the old Writer render result for a document where the top margin should be ignored:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-ignore-margin-page-top/old.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-ignore-margin-page-top/old.png"&gt;&lt;figcaption&gt;Bugdoc: old Writer render&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here is the new Writer render result for a document where the top margin is ignored:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-ignore-margin-page-top/new.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-ignore-margin-page-top/new.png"&gt;&lt;figcaption&gt;Bugdoc: new Writer render&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Finally, the reference render result, showing the ignored top paragraph margin:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-ignore-margin-page-top/ref.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-ignore-margin-page-top/ref.png"&gt;&lt;figcaption&gt;Bugdoc: reference render&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As you can see, now the unwanted top paragraph margin is omitted at page top.&lt;/p&gt;
&lt;h2 id="how-is-this-implemented"&gt;How is this implemented?&lt;a class="headerlink" href="#how-is-this-implemented" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you would like to know a bit more about how this works, continue reading... :-)&lt;/p&gt;
&lt;p&gt;As usual, the high-level problem was addressed by a series of small changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/abd90828cf101581a07b9d1c371a8c3156521e9f"&gt;tdf#160952 sw: ignore top margin of para on non-first pages with newer DOCX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git.libreoffice.org/core/commit/ae7900dd42a65aaf60df6b21b9ad511496b209d9"&gt;tdf#164095 sw: fix missing top margin on paragraph after changing page style&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="want-to-start-using-this"&gt;Want to start using this?&lt;a class="headerlink" href="#want-to-start-using-this" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can get a development edition of Collabora Online 24.04 and try it out yourself right now: &lt;a href="https://www.collaboraonline.com/code/"&gt;try
the development edition&lt;/a&gt;.  Collabora intends to continue
supporting and contributing to LibreOffice, the code is merged so we expect all of this work will be
available in TDF's next release too (25.2).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Wed, 08 Jan 2025 09:53:05 +0100</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2025-01-08:/blog/sw-ignore-margin-page-top.html</guid><category>libreoffice</category><category>en</category></item><item><title>Editeng RTF export: fixing a lost paragraph style</title><link>https://vmiklos.hu/blog/editeng-rtf-export-lost-para-style.html</link><description>&lt;p&gt;Impress shape text doesn't have much support for styles, e.g. the default UI in Writer gives you a
paragraph style dropdown, and you don't get the same in Impress. Still, a paragraph style is
attached to bullets based on their outline level, and Impress has a View → Outline menu item to give
you that styled text you can copy. Pasting that to Writer started to lose styles recently and it's
now fixed to work again.&lt;/p&gt;
&lt;p&gt;This work is primarily for &lt;a href="https://www.collaboraonline.com/"&gt;Collabora Online&lt;/a&gt;, but the feature is
available in desktop Impress as well.&lt;/p&gt;
&lt;h2 id="motivation"&gt;Motivation&lt;a class="headerlink" href="#motivation" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As described in a &lt;a href="https://git.libreoffice.org/core/commit/70d1bd6ee0eba9d6661cd6280566f77a87f2d068"&gt;previous
commit&lt;/a&gt;, I had a
case where lots of not needed paragraph styles were exported to RTF in case an Impress document had
enough master pages. The idea was to only export actually used paragraph styles, to avoid wasting
CPU power.&lt;/p&gt;
&lt;p&gt;Turns out filtering out paragraph styles has to happen at two locations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in the style table to assign an index to a paragraph style&lt;/li&gt;
&lt;li&gt;when referring to those styles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The problem was that unused styles were removed from the style table, but not from the style → index
mapping, so as soon as you had both used and unused paragraph styles, the declared and the referred
style indexes didn't match anymore.&lt;/p&gt;
&lt;h2 id="results-so-far"&gt;Results so far&lt;a class="headerlink" href="#results-so-far" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is a sample paste result in Writer, where you can see that the text doesn't have a custom
paragraph style:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/editeng-rtf-export-lost-para-style/old.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/editeng-rtf-export-lost-para-style/old.png"&gt;&lt;figcaption&gt;Bugdoc: old Writer paste&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here is the same paste, now with paragraph styles restored:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/editeng-rtf-export-lost-para-style/new.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/editeng-rtf-export-lost-para-style/new.png"&gt;&lt;figcaption&gt;Bugdoc: new Writer paste&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As you can see, now the pasted text has paragraph styles.&lt;/p&gt;
&lt;h2 id="how-is-this-implemented"&gt;How is this implemented?&lt;a class="headerlink" href="#how-is-this-implemented" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you would like to know a bit more about how this works, continue reading... :-)&lt;/p&gt;
&lt;p&gt;The bugfix commit was &lt;a href="https://git.libreoffice.org/core/commit/c8b607b7c0096c58dc5187262bf0133dee728d50"&gt;editeng RTF export: fix broken offsets into the para style table&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The tracking bug was &lt;a href="https://bugs.documentfoundation.org/show_bug.cgi?id=163883"&gt;tdf#163883&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="want-to-start-using-this"&gt;Want to start using this?&lt;a class="headerlink" href="#want-to-start-using-this" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can get a development edition of Collabora Online 24.04 and try it out yourself right now: &lt;a href="https://www.collaboraonline.com/code/"&gt;try
the development edition&lt;/a&gt;.  Collabora intends to continue
supporting and contributing to LibreOffice, the code is merged so we expect all of this work will be
available in TDF's next release too (25.2).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Wed, 04 Dec 2024 11:34:30 +0100</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2024-12-04:/blog/editeng-rtf-export-lost-para-style.html</guid><category>libreoffice</category><category>en</category></item><item><title>Handling page captures for Writer TextBoxes</title><link>https://vmiklos.hu/blog/sw-textbox-capture.html</link><description>&lt;p&gt;Writer TextBoxes provide the user with shapes that can have complex geometry and complex content.
There is also a feature to capture shapes inside page boundaries: now the two features interact with
each other better.&lt;/p&gt;
&lt;p&gt;This work is primarily for &lt;a href="https://www.collaboraonline.com/"&gt;Collabora Online&lt;/a&gt;, but the feature is
available in desktop Writer as well.&lt;/p&gt;
&lt;h2 id="motivation"&gt;Motivation&lt;a class="headerlink" href="#motivation" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As described in a &lt;a href="https://vmiklos.hu/blog/textbox.html"&gt;previous post&lt;/a&gt;, Writer implements the TextBox
feature with a pair of objects: a Draw shape (with complex geometry) and a (hidden) Writer TextFrame,
providing complex content. To avoid wrapping problems, the underlying TextFrame always has its wrap
type set to "through", i.e. text may wrap around the Draw shape, but the hidden TextFrame is always
ignored during text wrapping.&lt;/p&gt;
&lt;p&gt;In most cases this provides the expected behavior, because the user sees one object, so wrapping
around at most one object is not surprising.&lt;/p&gt;
&lt;p&gt;However, there is also an other feature, that shapes may be captured inside page frames: if their
position would be outside the page frame, Writer corrects this, so they are not off-page. This also
makes sense, so it can't happen that your document has a shape that is hard to find, due to a silly
position.&lt;/p&gt;
&lt;p&gt;The trouble comes when these two are combined: the Draw shape's position gets adjusted to be
captured inside the page frame, but the TextFrame's wrap type is "through", and objects with this
wrap type are an exception from the capturing mechanism, so the position of the two shapes get out
of sync.&lt;/p&gt;
&lt;h2 id="results-so-far"&gt;Results so far&lt;a class="headerlink" href="#results-so-far" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The problem is now solved by improving the layout, so in case the TextFrame is actually part of a
Draw shape + TextFrame pair (forming a TextBox), then we calculate the effective wrap type of the
TextFrame based on the wrap type of its Draw shape, so either both objects are captured or none,
which results in consistent render result.&lt;/p&gt;
&lt;p&gt;Here is a sample document where all margins are configured to be equal, but capturing corrected the
Draw shape (and not the TextFrame):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-textbox-capture/old.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-textbox-capture/old.png"&gt;&lt;figcaption&gt;Bugdoc: old Writer render&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here is the same document, with consistent positioning:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sw-textbox-capture/new.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sw-textbox-capture/new.png"&gt;&lt;figcaption&gt;Bugdoc: new Writer render&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As you can see, now the rendered margins actually equal, as wanted.&lt;/p&gt;
&lt;h2 id="how-is-this-implemented"&gt;How is this implemented?&lt;a class="headerlink" href="#how-is-this-implemented" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you would like to know a bit more about how this works, continue reading... :-)&lt;/p&gt;
&lt;p&gt;The bugfix commit was &lt;a href="https://git.libreoffice.org/core/commit/c8549fa3204802daec8597ba0f9f4f7ef23d5cd2"&gt;sw textbox: capture fly when its draw object is captured&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The tracking bug was &lt;a href="https://bugs.documentfoundation.org/show_bug.cgi?id=138711"&gt;tdf#138711&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="want-to-start-using-this"&gt;Want to start using this?&lt;a class="headerlink" href="#want-to-start-using-this" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can get a development edition of Collabora Online 24.04 and try it out yourself right now: &lt;a href="https://www.collaboraonline.com/code/"&gt;try
the development edition&lt;/a&gt;.  Collabora intends to continue
supporting and contributing to LibreOffice, the code is merged so we expect all of this work will be
available in TDF's next release too (25.2).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Fri, 08 Nov 2024 08:58:46 +0100</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2024-11-08:/blog/sw-textbox-capture.html</guid><category>libreoffice</category><category>en</category></item><item><title>Per-paragraph semi-transparent shape text in Impress</title><link>https://vmiklos.hu/blog/sd-semi-transparent-text2.html</link><description>&lt;p&gt;The SVG export in Impress now supports a per-paragraph setting to handle semi-transparent shape
text, while previously this was only possible to control at a per-shape level.&lt;/p&gt;
&lt;p&gt;This work is primarily for &lt;a href="https://www.collaboraonline.com/"&gt;Collabora Online&lt;/a&gt;, but the feature is
available in desktop Impress as well.&lt;/p&gt;
&lt;h2 id="motivation"&gt;Motivation&lt;a class="headerlink" href="#motivation" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As described in a &lt;a href="https://vmiklos.hu/blog/sd-semi-transparent-text.html"&gt;previous post&lt;/a&gt;, Impress already
had the capability to have semi-transparent shape text, but the SVG export of this for the case when
not all paragraphs have the same setting was broken.&lt;/p&gt;
&lt;p&gt;Transparency in SVG can be described as a property of a group (&lt;code&gt;&amp;lt;g style="opacity: 0.5"&amp;gt;...&amp;lt;/g&amp;gt;&lt;/code&gt;)
and it can be also a property of the text (&lt;code&gt;&amp;lt;tspan fill-opacity="0.5"&amp;gt;...&amp;lt;/tspan&amp;gt;&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The SVG export works with the metafile of the shape, so when looking for meta actions, it tries to
guess if the transparency will be for text: if so, it needs to use the &lt;code&gt;tspan&lt;/code&gt; markup, otherwise
going with the &lt;code&gt;g&lt;/code&gt; markup is OK.&lt;/p&gt;
&lt;p&gt;What happened here is that meta action for a normal text started, so the SVG export assumed the text
is not semi-transparent, but later the second line was still transparent, so we started a group
element, and this resulted in a not even well-formed XML output.&lt;/p&gt;
&lt;h2 id="results-so-far"&gt;Results so far&lt;a class="headerlink" href="#results-so-far" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The relevant part of the test document is simple: just 3 paragraphs, the second one is
semi-transparent (and also has a bullet, as an extra):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sd-semi-transparent-text2/svg-1input.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sd-semi-transparent-text2/svg-1input.png"&gt;&lt;figcaption&gt;Bugdoc: original Impress render&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once this was exported to SVG, this resulted in a non-well-formed XML, so you got this error in a
web browser:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sd-semi-transparent-text2/svg-2bad.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sd-semi-transparent-text2/svg-2bad.png"&gt;&lt;figcaption&gt;Bugdoc: old SVG render&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once tweaking the transparency mask writer to check if text started already, we get the correct SVG
render:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://share.vmiklos.hu/blog/sd-semi-transparent-text2/svg-3good.png"&gt;&lt;figure&gt;&lt;img src="https://share.vmiklos.hu/blog/sd-semi-transparent-text2/svg-3good.png"&gt;&lt;figcaption&gt;Bugdoc: new SVG render&lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="how-is-this-implemented"&gt;How is this implemented?&lt;a class="headerlink" href="#how-is-this-implemented" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you would like to know a bit more about how this works, continue reading... :-)&lt;/p&gt;
&lt;p&gt;The bugfix commit was &lt;a href="https://git.libreoffice.org/core/commit/0a89d65e6bb7be293c1a7b4615a08292701694dc"&gt;SVG export: fix handling of semi-transparent text inside a
list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The tracking bug was &lt;a href="https://bugs.documentfoundation.org/show_bug.cgi?id=162782"&gt;tdf#162782&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="want-to-start-using-this"&gt;Want to start using this?&lt;a class="headerlink" href="#want-to-start-using-this" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can get a development edition of Collabora Online 24.04 and try it out yourself right now: &lt;a href="https://www.collaboraonline.com/code/"&gt;try
the development edition&lt;/a&gt;.  Collabora intends to continue
supporting and contributing to LibreOffice, the code is merged so we expect all of this work will be
available in TDF's next release too (25.2).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miklos Vajna</dc:creator><pubDate>Fri, 04 Oct 2024 08:22:01 +0200</pubDate><guid isPermaLink="false">tag:vmiklos.hu,2024-10-04:/blog/sd-semi-transparent-text2.html</guid><category>libreoffice</category><category>en</category></item></channel></rss>