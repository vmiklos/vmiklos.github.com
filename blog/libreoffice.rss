<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>What is Miklos hacking - Tags: libreoffice</title>
        <description></description>
        <link>http://vmiklos.hu/blog/</link>
        <item>
            <title>Hackweek 9</title>
            <description>&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh6.googleusercontent.com/-o4L02197n38/UW-lp9UHX2I/AAAAAAAACiU/XetdnZpBpp4/s700/hackweek.jpg"&gt;
&lt;img src="https://lh6.googleusercontent.com/-o4L02197n38/UW-lp9UHX2I/AAAAAAAACiU/XetdnZpBpp4/s400/hackweek.jpg" alt="https://lh6.googleusercontent.com/-o4L02197n38/UW-lp9UHX2I/AAAAAAAACiU/XetdnZpBpp4/s400/hackweek.jpg" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Last week was &lt;a href="http://hackweek.suse.com/"&gt;Hackweek&lt;/a&gt; at SUSE&amp;#8201;&amp;#8212;&amp;#8201;below is a quick
summary on what experiments did I do during that timeframe.&lt;/p&gt;&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_lcov"&gt;lcov&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I did some experiments with using lcov on the LibreOffice codebase. The goal is
to have a quick iteration, so you can see the current coverage of a file or a
directory, select a method that is not yet tested, add a test for it, and
"test" the test by checking if the coverage indeed got improved. As a first
step, I tried this out on the Writer RTF import:&lt;/p&gt;&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;&lt;code&gt;cd writerfilter
touch source/rtftok/*
make -sr -j8 gb_GCOV=YES &lt;b&gt;&amp;lt;1&amp;gt;&lt;/b&gt;
cd ../sw; make -sr -j8 CppunitTest_sw_rtfexport CppunitTest_sw_rtfimport &lt;b&gt;&amp;lt;2&amp;gt;&lt;/b&gt;
lcov --directory workdir/unxlngx6/CxxObject/writerfilter/source/rtftok/ --capture --output-file libreoffice.info &lt;b&gt;&amp;lt;3&amp;gt;&lt;/b&gt;
genhtml -o coverage libreoffice.info &lt;b&gt;&amp;lt;4&amp;gt;&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class="colist arabic"&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
rebuild selected files with lcov options
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
run the tests
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
extract coverage information to a single .info file
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
generate some nice HTML output from the .info file
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;div class="admonitionblock"&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td class="icon"&gt;
&lt;div class="title"&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class="content"&gt;lcov
&lt;a href="https://build.opensuse.org/project/show?project=openSUSE%3AMaintenance%3A1336"&gt;had
problems&lt;/a&gt; with gcc-4.7, fully updated openSUSE 12.2 or 12.3 is known to work.&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;There is a
&lt;a href="http://cgit.freedesktop.org/libreoffice/contrib/dev-tools/plain/lcov/coverage.sh"&gt;script&lt;/a&gt;
available to make the above a bit more automated.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The speed of the above depends on the amount of code needing a rebuild + the
number of tests, but it should not take more than a minute.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;E.g. I noticed the bookmark import code isn&amp;#8217;t tested, added a
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=7b515a57eb6a644860715018656ac0b843b62baf"&gt;test
for it&lt;/a&gt;, and that indeed improved the line coverage of rtfdocumentimpl.cxx:
84.1% &amp;#8594; 85.0%.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;A next area I wanted to test is the Writer RTF export. Let&amp;#8217;s pick something in
rtfattributeoutput.cxx&amp;#8230; StartURL() is not tested, so a
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=85c8252e13e9234253494f96ffd70df35be056dc"&gt;hyperlink
testcase&lt;/a&gt; should help. Indeed it did: 50.2% &amp;#8594; 52.0%.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Last, but not at least, thanks to Norbert Thiebaud, who added &lt;code&gt;gb_GCOV&lt;/code&gt; to
gbuild.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_gdb_pretty_printers"&gt;gdb pretty-printers&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Then I experimented with improving our Writer gdb Python pretty-printers. One
annoying shortcoming was the lack of handling uno::Reference&amp;lt;text::XTextRange&amp;gt;.
Imagine one searches for a bug related to table import for DOCX or RTF. One
idea is to check the arguments of the convertToTable() method call. The first
argument is a 2D array of XTextRange pairs, that describe what will be the
input for cell contents. So if you want to check the first cell, you do
something like this:&lt;/p&gt;&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;&lt;code&gt;(gdb) b DomainMapperTableHandler.cxx:798
(gdb) r
(gdb) print (*m_pTableSeq)[0][0]
$1 = uno::Sequence of length 2 = {uno::Reference to (XInterface) 0x1a73648, uno::Reference to (XInterface) 0x1a77f68}
(gdb) print (*m_pTableSeq)[0][0][0]
$2 = uno::Reference to (XInterface) 0x1a73648
(gdb) print (*m_pTableSeq)[0][0][1]
$3 = uno::Reference to (XInterface) 0x1a77f68&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Not that helpful. Here is how one could work it around:&lt;/p&gt;&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;&lt;code&gt;(gdb) print (*m_pTableSeq)[0][0][0]._pInterface-&amp;gt;m_pImpl-&amp;gt;m_pMark-&amp;gt;m_pPos1
$4 = boost::scoped_ptr SwPosition (node 10, offset 0)
(gdb) print (*m_pTableSeq)[0][0][1]._pInterface-&amp;gt;m_pImpl-&amp;gt;m_pMark-&amp;gt;m_pPos1
$5 = boost::scoped_ptr SwPosition (node 10, offset 20)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;But this is not something anyone will remember. After adding a few new
pretty-printers, now it&amp;#8217;s like this:&lt;/p&gt;&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;&lt;code&gt;(gdb) print (*m_pTableSeq)[0][0]
$1 = uno::Sequence of length 2 = {uno::Reference to (SwXTextRange *) 0x1a72b98, uno::Reference to (SwXTextRange *) 0x1a773b8}
(gdb) print *(*m_pTableSeq)[0][0][0]._pInterface
$2 = (SwXTextRange) SwXTextRange sw::UnoImplPtr SwXTextRange::Impl = {mark = sw::mark::IMark = {pos1 = boost::scoped_ptr SwPosition (node 10, offset 0), pos2 = empty boost::scoped_ptr}}
(gdb) print *(*m_pTableSeq)[0][0][1]._pInterface
$3 = (SwXTextRange) SwXTextRange sw::UnoImplPtr SwXTextRange::Impl = {mark = sw::mark::IMark = {pos1 = boost::scoped_ptr SwPosition (node 10, offset 20), pos2 = empty boost::scoped_ptr}}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Technically, it would be possible to make &lt;code&gt;print (*m_pTableSeq)[0][0][0]&lt;/code&gt; work
as well, but for a larger class without a pretty-printer that would result in
multiple pages of output. Anyway, &lt;code&gt;_pInterface&lt;/code&gt; is the same for all UNO
objects, so something that is not too hard to remember.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;An other improvement is the XTextCursor pretty-printer. Example usage:
debugging of the commented text range ODF import. Before:&lt;/p&gt;&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;&lt;code&gt;(gdb) b txtfldi.cxx:559
(gdb) print *rHlp.GetCursor()._pInterface-&amp;gt;m_pImpl-&amp;gt;pRegisteredIn-&amp;gt;m_pMark
$1 = SwPosition (node 9, offset 4)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;After the new pretty-printers one doesn&amp;#8217;t have to type that much:&lt;/p&gt;&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;&lt;code&gt;(gdb) print *rHlp.GetCursor()._pInterface
$1 = (SwXTextCursor)
    SwXTextCursor sw::UnoImplPtr SwXTextCursor::Impl = {registeredIn = SwModify = {point = SwPosition (node 9, offset 4), mark = SwPosition (node 9, offset 4), next = 0x1a28b88, prev = 0x1a28b88}}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_rtf_filter_text_frame_rework"&gt;RTF filter text frame rework&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Finally, I experimented with reworking the textframe code in the RTF filter. In
short, the motivation is to bring the RTF filter in sync with the OOXML one,
which can nicely import and export text box gradients. To get there, there are
3 different problems to solve:&lt;/p&gt;&lt;/div&gt;
&lt;div class="olist arabic"&gt;&lt;ol class="arabic"&gt;
&lt;li&gt;
&lt;p&gt;
The RTF import filter currently imports rectangle and textbox shapes as
  drawinglayer rectangles, even if they have some text inside. Just like the
  OOXML import filter, we would better import these shapes as Writer textframes,
  as long as they contain some text.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The RTF export writes Writer textframes as old-style Word frames, not as text
  box shapes. This should be changed, as the old syntax doesn&amp;#8217;t support
  gradients, and in general both the DOC and DOCX export filters already export
  new-style Word frames, so there is no reason why the RTF filter would not do
  the same.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Once all the above is done, add support for gradients in the RTF filter, in a
  similar way OOXML filters were already improved to handle gradients.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Once this all is done, add new testcases to cover the new code.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;First I had hacked on #1, sadly Writer textframes and drawinglayer rectangles
don&amp;#8217;t share the exactly same UNO API, like drawinglayer has &lt;code&gt;TextWritingMode&lt;/code&gt;
and a &lt;code&gt;Name&lt;/code&gt; property, Writer textframes have a &lt;code&gt;WritingMode&lt;/code&gt; property instead,
and additionally they implement the &lt;code&gt;XNamed&lt;/code&gt; UNO interface, etc.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Then I switched to #3&amp;#8201;&amp;#8212;&amp;#8201;there I managed to reuse our existing VML import to do
the hard work: the RTF tokenizer reads the RTF shape properties, then
constructs the same VML model what is normally built from v:fill and v:shadow
XML elements inside DOCX files, finally the VML import does the mapping of
Word&amp;#8217;s gradient concept to the Writer gradient concept.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;At the end of the week I also hacked on #2 and #4&amp;#8201;&amp;#8212;&amp;#8201;and while I did so, I
noticed two more interesting details of Word&amp;#8217;s new-style RTF textframe markup:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The bad news: Writer supports having different top/left/bottom/right borders,
  RTF still just supports the concept of a single line around the textframe.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The good news: old-style RTF frames didn&amp;#8217;t support different left/right or
  top/bottom external margins, but Writer does&amp;#8201;&amp;#8212;&amp;#8201;so now using the new syntax,
  this is exported properly.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_git"&gt;git&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Unrelated to the above, I
&lt;a href="http://git.kernel.org/cgit/git/git.git/commit/?id=21246dbb9e0af278bc671e32e45a6cae4ad38b6f"&gt;fixed&lt;/a&gt;
an annoying git bug, when one tried to cherry-pick multiple commits at the same
time, and copy&amp;amp;paste went wrong, the "unrecognized" arguments were just
silently ignored. Now one gets an error instead.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_docs_libreoffice_org"&gt;docs.libreoffice.org&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;In parallel to the above, Thorsten was kind enough to explain how to update
&lt;a href="http://docs.libreoffice.org/"&gt;docs.libreoffice.org&lt;/a&gt;: The new output is generated
using doxygen 1.8, it contains a bit more eye-candy. E.g. notice the new
foldable subsections
&lt;a href="http://docs.libreoffice.org/sw/html/classSwUnoCrsr.html"&gt;here&lt;/a&gt;. ;-)&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/hackweek-9.html</link>
            <pubDate>Mon, 15 Apr 2013 17:31:35 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/hackweek-9.html</guid>
        </item>
        <item>
            <title>LibreOffice Writer now supports graphic bullets in its DOCX/RTF filters</title>
            <description>&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh5.googleusercontent.com/-fhN5_7nf5A8/UWG83Z5qLqI/AAAAAAAAChY/cehOqHVomas/s628/ooxml-graphic-bullet.png"&gt;
&lt;img src="https://lh5.googleusercontent.com/-fhN5_7nf5A8/UWG83Z5qLqI/AAAAAAAAChY/cehOqHVomas/s400/ooxml-graphic-bullet.png" alt="https://lh5.googleusercontent.com/-fhN5_7nf5A8/UWG83Z5qLqI/AAAAAAAAChY/cehOqHVomas/s400/ooxml-graphic-bullet.png" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;If you ever tried to use graphical bullets in Writer (Format &amp;#8594; Bullets and
Numbering &amp;#8594; Graphics), you may have noticed that only the ODF filter can load
and save such a numbering. This is now improved a lot. Motivated by seeing this
is now handled in the binary DOC filter, I now added support for this also to
the DOCX and RTF import and export filters. If you want to play with this
feature, core.git also contains a
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/plain/sw/qa/extras/ooxmlexport/data/i120928.docx"&gt;DOCX&lt;/a&gt;
and an
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/plain/sw/qa/extras/rtfexport/data/i120928.rtf"&gt;RTF&lt;/a&gt;
sample as well.&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/graphic-bullets.html</link>
            <pubDate>Sun, 07 Apr 2013 20:46:36 +0200</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/graphic-bullets.html</guid>
        </item>
        <item>
            <title>git-review</title>
            <description>&lt;div class="paragraph"&gt;&lt;p&gt;LibreOffice started to use &lt;a href="https://gerrit.libreoffice.org/"&gt;Gerrit&lt;/a&gt; for code
review, and while occasional contributors
&lt;a href="https://wiki.documentfoundation.org/Development/gerrit/SubmitPatch"&gt;can submit
patches manually&lt;/a&gt;, in case one does many reviews, it&amp;#8217;s handy to use a dedicated
tool. In core.git, we have
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/tree/logerrit"&gt;logerrit&lt;/a&gt;, but
that&amp;#8217;s not advised for regular reviewers, either,
&lt;a href="https://github.com/openstack-infra/git-review"&gt;git-review&lt;/a&gt; is recommended
instead.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;So I looked into git-review. The good news is that it&amp;#8217;s packaged already for most distributions, e.g. a simple&lt;/p&gt;&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;&lt;code&gt;zypper in python-git-review&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;on openSUSE installs it.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I wanted to use this tool for two tasks:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Submitting changes to Gerrit: &lt;code&gt;git review -R&lt;/code&gt; could do that. &lt;code&gt;-R&lt;/code&gt; prevents
  automatic rebase, so a test build won&amp;#8217;t fail because your patch is based on
  an already broken commit. The other good thing is that you don&amp;#8217;t have to
  remember where to submit: both the master and libreoffice-4-0 branches contain
  a &lt;code&gt;.gitreview&lt;/code&gt; file that contains the necessary server / branch information.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Cherry-picking changes from Gerrit: I found no option for this. A cherry-pick
  command is generated on the web interface, but it&amp;#8217;s more complicated than a
  simple &lt;code&gt;&amp;lt;some command&amp;gt; &amp;lt;number of the change&amp;gt;&lt;/code&gt;. So I submitted
  &lt;a href="https://review.openstack.org/17290"&gt;this change&lt;/a&gt; to git-review itself, the next
  release will be able to do &lt;code&gt;git review -x &amp;lt;number of the change&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Probably the browser interface is still the best to comment (especially inline
comment) and approve changes, though David even submitted a
&lt;a href="https://review.openstack.org/17423"&gt;proof of concept patch&lt;/a&gt; for that as well.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Finally, let me just clear two myths:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
If you use Google for OpenID login, you can have multiple OpenID accounts
  associated with your Gerrit login, so it&amp;#8217;s not a problem (first I thought it
  is) if you use one email for Gerrit and an other one for accessing other
  Google services.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Somewhere I read that the stock LibreOffice hooks conflict with git-review:
  nope, git-review didn&amp;#8217;t touch the hooks, you can use the tool without
  corrupting them in any way.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/git-review.html</link>
            <pubDate>Thu, 28 Feb 2013 23:05:12 +0100</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/git-review.html</guid>
        </item>
        <item>
            <title>LibreOffice Writer now supports gradients in text frame backgrounds</title>
            <description>&lt;div class="paragraph"&gt;&lt;p&gt;When you create a rectangle or text frame in Writer, you have two choices. You
can use the draw toolbar to create a drawinglayer rectangle, and you can also
insert a text frame. The drawinglayer shapes are shared between the LibreOffice
applications, and already supported having not only a bitmap or a color but a
gradient or a hatch as a background.  The benefit of Writer text frames is that
they can contain anything a normal Writer document can&amp;#8201;&amp;#8212;&amp;#8201;think of columns,
tables, etc. These features are not supported by drawinglayer rectangles.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;So till now you had to decide what to pick, but it wasn&amp;#8217;t possible to have
both. LibreOffice 4.1 makes this situation better. Now it&amp;#8217;s possible to have
gradient backgrounds in Writer text frames as well:&lt;/p&gt;&lt;/div&gt;
&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://wiki.documentfoundation.org/File:Swxtextframe-gradient-ui.png"&gt;
&lt;img src="https://wiki.documentfoundation.org/images/thumb/e/e6/Swxtextframe-gradient-ui.png/400px-Swxtextframe-gradient-ui.png" alt="https://wiki.documentfoundation.org/images/thumb/e/e6/Swxtextframe-gradient-ui.png/400px-Swxtextframe-gradient-ui.png" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The nice thing is that this feature was already supported by ODF, just not by
Writer, so no such paperwork was needed this time. Also the OOXML filters are
updated. As I already stated in
&lt;a href="https://bugs.freedesktop.org/show_bug.cgi?id=46029#c5"&gt;this comment&lt;/a&gt;, the binary
DOC and RTF filters are not yet touched regarding this feature&amp;#8201;&amp;#8212;&amp;#8201;though I
already looked into the RTF one, and have some idea what rework is needed there
first.&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/swtextframe-gradientbackground.html</link>
            <pubDate>Mon, 18 Feb 2013 15:23:54 +0100</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/swtextframe-gradientbackground.html</guid>
        </item>
        <item>
            <title>FOSDEM 2013</title>
            <description>&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://speakerdeck.com/vmiklos/how-to-debug-writer-file-format-issues"&gt;
&lt;img src="https://lh4.googleusercontent.com/-0xHohY_C07c/URQAMD3n2MI/AAAAAAAACHk/AS18zixref8/s320/Swfilters-fosdem-brussels-2k13.png" alt="https://lh4.googleusercontent.com/-0xHohY_C07c/URQAMD3n2MI/AAAAAAAACHk/AS18zixref8/s320/Swfilters-fosdem-brussels-2k13.png" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;We spent the last weekend in Brussels, at FOSDEM 2013. Outside attending great
talks, I most enjoyed meeting people I haven&amp;#8217;t met in person before, in no particual order:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://www.bitlbee.org/"&gt;Wilmer van der Gaast&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="https://developers.google.com/open-source/"&gt;Cat Allman&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://wiki.openoffice.org/wiki/User:Od"&gt;Oliver-Rainer Wittmann&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://picobot.org/"&gt;Phil Muldoon&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href="http://0pointer.de/blog"&gt;Lennart Poettering&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Also fixed &lt;a href="https://bugs.freedesktop.org/show_bug.cgi?id=48440"&gt;fdo#48440&lt;/a&gt;,
&lt;a href="https://bugs.freedesktop.org/show_bug.cgi?id=58646"&gt;fdo#58646&lt;/a&gt; and
&lt;a href="https://bugs.freedesktop.org/show_bug.cgi?id=59419"&gt;fdo#59419&lt;/a&gt; during
less-interesting talks. ;-)&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Additionally, during the last day we had time for some site-seeing, some
pictures are
&lt;a href="https://picasaweb.google.com/104737754628780823336/20130204_Brusszel"&gt;here&lt;/a&gt;.
Slides of other LibreOffice talks are also
&lt;a href="https://wiki.documentfoundation.org/Marketing/Events/Fosdem2013"&gt;available&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/fosdem2013.html</link>
            <pubDate>Thu, 07 Feb 2013 20:42:17 +0100</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/fosdem2013.html</guid>
        </item>
        <item>
            <title>Zero RTF Regressions?</title>
            <description>&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh4.googleusercontent.com/-VpSgFTUoC7o/UN26BTFBz_I/AAAAAAAAB9U/rFoWruRijss/s739/0regressions.png"&gt;
&lt;img src="https://lh4.googleusercontent.com/-VpSgFTUoC7o/UN26BTFBz_I/AAAAAAAAB9U/rFoWruRijss/s400/0regressions.png" alt="https://lh4.googleusercontent.com/-VpSgFTUoC7o/UN26BTFBz_I/AAAAAAAAB9U/rFoWruRijss/s400/0regressions.png" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I think the first attempt to track LibreOffice RTF Writer regressions (bugs not
presenting in some earlier versions) was in
&lt;a href="http://article.gmane.org/gmane.comp.documentfoundation.libreoffice.devel/27680"&gt;this&lt;/a&gt;
mail. That started with 14 bugs, and of course while I fixed a few, new ones
were added as well. I guess this is mostly due to testing work, since new fixes
are usually covered by unit tests, so re-introducing the same problems
nowadays is a bit more work.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;I remember I was down to one regression a few months ago, but we still had
performance problems, which
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=a48e2fd9049797110b3b2505c363557284987ca8"&gt;got
solved&lt;/a&gt; a few weeks ago, so I had the idea that I want to go down to zero
during the holidays. It seems today I finally managed to do so&amp;#8201;&amp;#8212;&amp;#8201;bugs tagged
as &lt;tt&gt;rtf_filter&lt;/tt&gt; and &lt;tt&gt;regression&lt;/tt&gt; are gone, thanks everyone who helped! :-)&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;For the reference here are the queries:
&lt;a href="https://bugs.freedesktop.org/buglist.cgi?keywords=regression&amp;amp;keywords_type=allwords&amp;amp;status_whiteboard_type=allwordssubstr&amp;amp;query_format=advanced&amp;amp;status_whiteboard=rtf_filter&amp;amp;bug_status=NEW&amp;amp;bug_status=ASSIGNED&amp;amp;bug_status=REOPENED&amp;amp;bug_status=UNCONFIRMED&amp;amp;bug_status=NEEDINFO"&gt;RTF
regressions&lt;/a&gt;,
&lt;a href="https://bugs.freedesktop.org/buglist.cgi?keywords=regression&amp;amp;keywords_type=allwords&amp;amp;status_whiteboard_type=allwordssubstr&amp;amp;query_format=advanced&amp;amp;status_whiteboard=rtf_filter&amp;amp;bug_status=RESOLVED&amp;amp;list_id=196270"&gt;fixed
RTF regressions&lt;/a&gt;,
&lt;a href="https://bugs.freedesktop.org/buglist.cgi?cmdtype=dorem&amp;amp;remaction=run&amp;amp;namedcmd=Writer%20regressions&amp;amp;sharer_id=14344"&gt;Writer
regressions&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Now that the list is empty, feel free to tag more bugs as &lt;tt&gt;rtf_filter&lt;/tt&gt; from the
long Writer list when needed.&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/lo-zero-rtf-regressions.html</link>
            <pubDate>Fri, 28 Dec 2012 16:36:33 +0100</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/lo-zero-rtf-regressions.html</guid>
        </item>
        <item>
            <title>Free Software Conference 2012</title>
            <description>&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="http://konf.fsf.hu/cgis/ossc/2012/"&gt;
&lt;img src="https://lh5.googleusercontent.com/-KTXNNYP-bfg/UMOeX9xea7I/AAAAAAAAB38/lwc27RrjUNg/s400/konf2012_logo_web.png" alt="https://lh5.googleusercontent.com/-KTXNNYP-bfg/UMOeX9xea7I/AAAAAAAAB38/lwc27RrjUNg/s400/konf2012_logo_web.png" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;The Free Software Conference 2012&amp;#8201;&amp;#8212;&amp;#8201;orginized by FSF.hu&amp;#8201;&amp;#8212;&amp;#8201;was held today @
Budapest. I gave a talk about hacking on new Writer features
(&lt;a href="https://speakerdeck.com/vmiklos/hogyan-keszitsunk-uj-writer-funkciokat"&gt;slides&lt;/a&gt;).&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;We (with Andras) also ran the LibreOffice booth, and in idle cycles I also had
time to kill
&lt;a href="http://cgit.freedesktop.org/libreoffice/core/commit/?id=257a4090af068085143d71d60e6032ba0b998804"&gt;this
annoying bug&lt;/a&gt;. This year speakers got a t-shirt and a fine lunch, thanks for
the organizers! :)&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/szszk-2012.html</link>
            <pubDate>Sat, 08 Dec 2012 21:15:20 +0100</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/szszk-2012.html</guid>
        </item>
        <item>
            <title>LibreOffice Hackfest in Munich, 2012</title>
            <description>&lt;div class="imageblock" style="text-align:center;"&gt;
&lt;div class="content"&gt;
&lt;a class="image" href="https://lh3.googleusercontent.com/-oCxvARAY6aQ/ULNRD3q8ZTI/AAAAAAAAB3s/wIFkr3bjDZA/s600/MucHackfest2012.png"&gt;
&lt;img src="https://lh3.googleusercontent.com/-oCxvARAY6aQ/ULNRD3q8ZTI/AAAAAAAAB3s/wIFkr3bjDZA/s400/MucHackfest2012.png" alt="https://lh3.googleusercontent.com/-oCxvARAY6aQ/ULNRD3q8ZTI/AAAAAAAAB3s/wIFkr3bjDZA/s400/MucHackfest2012.png" /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;During the weekend I was in Munich to visit our second LibreOffice hackfest
this year. The archivements are detailed
&lt;a href="http://wiki.documentfoundation.org/Hackfest/Munich2012#Achievements"&gt;here&lt;/a&gt;. Here
are a few interestings details I learned during this event:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Laszlo explained on the train to Munich that single line spacing is 15% of
  the font size, by definition. That finally explains why it is that the height
  of a 12pt single-line paragraph in Writer is not 240 but 276 twips.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Finally Michael motivated (and also helped!) me to improve the copy&amp;amp;paste in
  the new RTF filter, so it seems that removing the old filter completely is
  near.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The ability to sign each other&amp;#8217;s gpg key was a great idea. I didn&amp;#8217;t know too
  much about this topic, so I read up on this
  &lt;a href="http://www.phillylinux.org/keys/terminal.html"&gt;here&lt;/a&gt;. (Additionally, the
  &lt;tt&gt;gpg-key2ps&lt;/tt&gt; command from &lt;tt&gt;signing-party&lt;/tt&gt;&amp;#8201;&amp;#8212;&amp;#8201;yes, there is such a package!&amp;#8201;&amp;#8212;&amp;#8201;  is useful.)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
We set up a nice icecream farm from the laptops, one more aspect that boosted
  our productivity.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Speaking about icecream&amp;#8201;&amp;#8212;&amp;#8201;there were two reasons why I didn&amp;#8217;t really use it:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
it required re-configuring your build tree (&lt;tt&gt;--enable-icecream&lt;/tt&gt;)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
it required shutting down your firewall
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;It turns out none of this is really needed, so let me share the way to avoid
these problems:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
look into the &lt;a href="http://en.opensuse.org/Icecream#Firewall"&gt;wiki&lt;/a&gt;, you only need to open a few ports, even broadcasting/auto-discovery works with a started firewall
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
use &lt;tt&gt;CCACHE_PREFIX="icecc" make -sr -j30&lt;/tt&gt; to enable icecream for a single make run
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Additionally, if you run openSUSE 12.2, by default the daemon reports that the
box can&amp;#8217;t compile x86_64 binaries (probably it hasn&amp;#8217;t been updated to deal with
the 3.0 kernel or something), a quick workaround is to install Lubos' updated
package:&lt;/p&gt;&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;&lt;tt&gt;zypper -p http://download.opensuse.org/repositories/home:/llunak:/clang/openSUSE_12.2/ in icecream-0.9.7-64.1s.x86_64&lt;/tt&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Thanks for the organizers, once again this hackfest turned out to be really useful! :)&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;As usual, some pictures are &lt;a href="https://picasaweb.google.com/104737754628780823336/20121125_Munchen"&gt;available&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/lo-hackfest-munich-2012.html</link>
            <pubDate>Mon, 26 Nov 2012 12:38:22 +0100</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/lo-hackfest-munich-2012.html</guid>
        </item>
        <item>
            <title>LibreOffice OOXML improvements in Writer</title>
            <description>&lt;div class="paragraph"&gt;&lt;p&gt;It&amp;#8217;s possible you noticed that in each LibreOffice release notes, we have a
line saying something like "improved DOCX support", but is rarely explained in
detail. I&amp;#8217;m posting here a few screenshots to correct this. The first series is
a list of import fixes which are already available in our shipping 3.6 release.
In each case I provide a test document, and a screenshot how it looked like
with LibreOffice 3.3 and how it looks like with LibreOffice 3.6 today. Click on
the images to get a larger image:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
document with a checked checkbox (&lt;a href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/checkbox.docx"&gt;test doc&lt;/a&gt;):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/checkbox-lo33.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/checkbox-lo33.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/checkbox-lo33.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/checkbox-lo36.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/checkbox-lo36.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/checkbox-lo36.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
document with contextual spacing enabled for the numbering (&lt;a href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/contextual-spacing.docx"&gt;test doc&lt;/a&gt;):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/contextual-spacing-lo33.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/contextual-spacing-lo33.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/contextual-spacing-lo33.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/contextual-spacing-lo36.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/contextual-spacing-lo36.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/contextual-spacing-lo36.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
document with a field that has a custom font size (&lt;a href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/field-fsize.docx"&gt;test doc&lt;/a&gt;):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/field-fsize-lo33.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/field-fsize-lo33.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/field-fsize-lo33.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/field-fsize-lo36.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/field-fsize-lo36.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/field-fsize-lo36.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
document with a SmartArt inside (&lt;a href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/smartart.docx"&gt;test doc&lt;/a&gt;):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/smartart-lo33.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/smartart-lo33.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/smartart-lo33.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/smartart-lo36.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/smartart-lo36.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/smartart-lo36.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
document with lots of VML shapes (&lt;a href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/vml.docx"&gt;test doc&lt;/a&gt;):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/vml-lo33.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/vml-lo33.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/vml-lo33.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/vml-lo36.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/vml-lo36.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/vml-lo36.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
document produced by Microsoft Office 2010 (&lt;a href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/mso-2010.docx"&gt;test doc&lt;/a&gt;, thanks Fridrich!):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/mso-2010-lo33.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/mso-2010-lo33.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/mso-2010-lo33.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/mso-2010-lo36.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/mso-2010-lo36.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/3.6/mso-2010-lo36.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Now let&amp;#8217;s also have a look at some OOXML features which will be imported
correctly in our upcoming 4.0 release:&lt;/p&gt;&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
document with commented text ranges (&lt;a href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/comment-textrange.docx"&gt;test doc&lt;/a&gt;):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/comment-textrange-lo33.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/comment-textrange-lo33.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/comment-textrange-lo33.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/comment-textrange-lo4.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/comment-textrange-lo4.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/comment-textrange-lo4.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
document with a floating table (&lt;a href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/floating-table.docx"&gt;test doc&lt;/a&gt;):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/floating-table-lo33.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/floating-table-lo33.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/floating-table-lo33.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/floating-table-lo4.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/floating-table-lo4.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/floating-table-lo4.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
document with ink annotations (&lt;a href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ink.docx"&gt;test doc&lt;/a&gt;, thanks Eilidh!):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ink-lo33.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ink-lo33.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ink-lo33.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ink-lo4.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ink-lo4.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ink-lo4.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
document with an OLE object inside a rectangle (&lt;a href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ole-in-rectangle.docx"&gt;test doc&lt;/a&gt;):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ole-in-rectangle-lo33.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ole-in-rectangle-lo33.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ole-in-rectangle-lo33.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ole-in-rectangle-lo4.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ole-in-rectangle-lo4.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/ole-in-rectangle-lo4.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
document with an inline image with custom margins (&lt;a href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/wp-inline-margins.docx"&gt;test doc&lt;/a&gt;):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/wp-inline-margins-lo33.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/wp-inline-margins-lo33.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/wp-inline-margins-lo33.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/wp-inline-margins-lo4.png"&gt;
&lt;img src="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/wp-inline-margins-lo4.t.png" alt="http://people.freedesktop.org/~vmiklos/2012/docx-demo/4.0/wp-inline-margins-lo4.t.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;If you want to try these out yourself, get a
&lt;a href="http://dev-builds.libreoffice.org/daily/"&gt;daily build&lt;/a&gt; and play with it! :) If
something goes wrong, report it to us in the
&lt;a href="https://www.libreoffice.org/get-help/bug/"&gt;Bugzilla&lt;/a&gt;, so we can try fix it
before 4.0 is released. And remember, there are lots more improvements
&lt;a href="http://wiki.documentfoundation.org/ReleaseNotes/4.0"&gt;coming&lt;/a&gt; in LibreOffice 4.0,
stay tuned!&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/lo-ooxml-improvements.html</link>
            <pubDate>Fri, 16 Nov 2012 11:36:23 +0100</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/lo-ooxml-improvements.html</guid>
        </item>
        <item>
            <title>LibreOffice RTF import Drawing Objects improvements</title>
            <description>&lt;div align="center"&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;&lt;span class="image"&gt;
&lt;a class="image" href="https://lh6.googleusercontent.com/-mckhq4D5DG8/UJ4m54N4GoI/AAAAAAAAB1k/QwaK6eXTFBo/s800/fdo42407-lo34.png"&gt;
&lt;img src="https://lh6.googleusercontent.com/-mckhq4D5DG8/UJ4m54N4GoI/AAAAAAAAB1k/QwaK6eXTFBo/s400/fdo42407-lo34.png" alt="https://lh6.googleusercontent.com/-mckhq4D5DG8/UJ4m54N4GoI/AAAAAAAAB1k/QwaK6eXTFBo/s400/fdo42407-lo34.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;
&lt;span class="image"&gt;
&lt;a class="image" href="https://lh6.googleusercontent.com/-_9nMd0soa8E/UJ4m9vQhMiI/AAAAAAAAB1s/kc7I5YUbGnc/s800/fdo42407-master.png"&gt;
&lt;img src="https://lh6.googleusercontent.com/-_9nMd0soa8E/UJ4m9vQhMiI/AAAAAAAAB1s/kc7I5YUbGnc/s400/fdo42407-master.png" alt="https://lh6.googleusercontent.com/-_9nMd0soa8E/UJ4m9vQhMiI/AAAAAAAAB1s/kc7I5YUbGnc/s400/fdo42407-master.png" /&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;It all started with &lt;a href="https://bugs.freedesktop.org/show_bug.cgi?id=42407"&gt;this
bugreport&lt;/a&gt; about a year ago. RTF has two different markups to describe shapes.
The old one (used till Word 6.0) is called Drawing Objects, the new one talks
about Shapes. The first picture shows the "support" for this syntax in
LibreOffice 3.4, and the situation did not change with my RTF import rework, as
I wasn&amp;#8217;t aware of any document still using this old syntax. So when I got this
bugreport, I knew it&amp;#8217;ll take some time to produce the correct layout, but now
during the LibreOffice conference I spent quite some time on this, and at the
end even the Hebrew text is imported correctly. ;-)&lt;/p&gt;&lt;/div&gt;
&lt;div class="paragraph"&gt;&lt;p&gt;Thanks to Lior who politely nagged me from time to time, this is now available
on master (see the second picture), which will become LibreOffice 4.0.&lt;/p&gt;&lt;/div&gt;
</description>
            <link>http://vmiklos.hu/blog/lo-rtfimport-drawingobjects.html</link>
            <pubDate>Sat, 10 Nov 2012 11:14:19 +0100</pubDate>
            <guid isPermaLink="false">http://vmiklos.hu/blog/lo-rtfimport-drawingobjects.html</guid>
        </item>
    </channel>
</rss>
